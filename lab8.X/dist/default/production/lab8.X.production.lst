

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Apr 25 22:43:41 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	strings
   211  01E7                     __pstrings:
   212  01E7                     stringtab:
   213  01E7                     __stringtab:
   214  01E7                     stringcode:	
   215                           ;	String table - string pointers are 1 byte each
   216                           
   217  01E7                     stringdir:
   218  01E7  3001               	movlw	high stringdir
   219  01E8  008A               	movwf	10
   220  01E9  0804               	movf	4,w
   221  01EA  0A84               	incf	4,f
   222  01EB  0782               	addwf	2,f
   223  01EC                     __stringbase:
   224  01EC  3400               	retlw	0
   225  01ED                     __end_of__stringtab:
   226  01ED                     _num_display:
   227  01ED  34FC               	retlw	252
   228  01EE  3460               	retlw	96
   229  01EF  34DA               	retlw	218
   230  01F0  34F2               	retlw	242
   231  01F1  3466               	retlw	102
   232  01F2  34B6               	retlw	182
   233  01F3  34BE               	retlw	190
   234  01F4  34E0               	retlw	224
   235  01F5  34FE               	retlw	254
   236  01F6  34F6               	retlw	246
   237  01F7                     __end_of_num_display:
   238  001E                     _ADRESH	set	30
   239  0008                     _PORTD	set	8
   240  0006                     _PORTB	set	6
   241  0005                     _PORTA	set	5
   242  001F                     _ADCON0bits	set	31
   243  0001                     _TMR0	set	1
   244  000B                     _INTCONbits	set	11
   245  0007                     _PORTC	set	7
   246  0042                     _RD2	set	66
   247  0041                     _RD1	set	65
   248  0040                     _RD0	set	64
   249  005A                     _T0IF	set	90
   250  0081                     _OPTION_REGbits	set	129
   251  008F                     _OSCCONbits	set	143
   252  009F                     _ADCON1bits	set	159
   253  0089                     _TRISE	set	137
   254  0088                     _TRISD	set	136
   255  0087                     _TRISC	set	135
   256  0085                     _TRISA	set	133
   257  0189                     _ANSELH	set	393
   258  0188                     _ANSEL	set	392
   259                           
   260                           	psect	cinit
   261  0015                     start_initialization:	
   262                           ; #config settings
   263                           
   264  0015                     __initialization:
   265                           
   266                           ; Clear objects allocated to COMMON
   267  0015  01F0               	clrf	__pbssCOMMON& (0+127)
   268  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   269  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   270  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   271  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   272                           
   273                           ; Clear objects allocated to BANK0
   274  001A  1283               	bcf	3,5	;RP0=0, select bank0
   275  001B  1303               	bcf	3,6	;RP1=0, select bank0
   276  001C  01B3               	clrf	__pbssBANK0& (0+127)
   277  001D                     end_of_initialization:	
   278                           ;End of C runtime variable initialization code
   279                           
   280  001D                     __end_of__initialization:
   281  001D  0183               	clrf	3
   282  001E  120A  118A  2821   	ljmp	_main	;jump to C main() function
   283                           
   284                           	psect	bssCOMMON
   285  0070                     __pbssCOMMON:
   286  0070                     _turno:
   287  0070                     	ds	1
   288  0071                     _dividendo:
   289  0071                     	ds	1
   290  0072                     _unidad:
   291  0072                     	ds	1
   292  0073                     _decena:
   293  0073                     	ds	1
   294  0074                     _centena:
   295  0074                     	ds	1
   296                           
   297                           	psect	bssBANK0
   298  0033                     __pbssBANK0:
   299  0033                     _divisor:
   300  0033                     	ds	1
   301                           
   302                           	psect	cstackCOMMON
   303  0075                     __pcstackCOMMON:
   304  0075                     ?_isr:
   305  0075                     ??_isr:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0075                     ?_main:	
   309                           ; 1 bytes @ 0x0
   310                           
   311                           
   312                           ; 1 bytes @ 0x0
   313  0075                     	ds	5
   314                           
   315                           	psect	cstackBANK0
   316  0020                     __pcstackBANK0:
   317  0020                     ?___bmul:
   318  0020                     ?___wmul:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0020                     ___bmul@multiplicand:	
   322                           ; 2 bytes @ 0x0
   323                           
   324  0020                     ___wmul@multiplier:	
   325                           ; 1 bytes @ 0x0
   326                           
   327                           
   328                           ; 2 bytes @ 0x0
   329  0020                     	ds	1
   330  0021                     ??___bmul:
   331                           
   332                           ; 1 bytes @ 0x1
   333  0021                     	ds	1
   334  0022                     ___bmul@product:
   335  0022                     ___wmul@multiplicand:	
   336                           ; 1 bytes @ 0x2
   337                           
   338                           
   339                           ; 2 bytes @ 0x2
   340  0022                     	ds	1
   341  0023                     ___bmul@multiplier:
   342                           
   343                           ; 1 bytes @ 0x3
   344  0023                     	ds	1
   345  0024                     ??___wmul:
   346  0024                     ___wmul@product:	
   347                           ; 1 bytes @ 0x4
   348                           
   349                           
   350                           ; 2 bytes @ 0x4
   351  0024                     	ds	2
   352  0026                     ?___awdiv:
   353  0026                     ___awdiv@divisor:	
   354                           ; 2 bytes @ 0x6
   355                           
   356                           
   357                           ; 2 bytes @ 0x6
   358  0026                     	ds	2
   359  0028                     ___awdiv@dividend:
   360                           
   361                           ; 2 bytes @ 0x8
   362  0028                     	ds	2
   363  002A                     ??___awdiv:
   364                           
   365                           ; 1 bytes @ 0xA
   366  002A                     	ds	1
   367  002B                     ___awdiv@counter:
   368                           
   369                           ; 1 bytes @ 0xB
   370  002B                     	ds	1
   371  002C                     ___awdiv@sign:
   372                           
   373                           ; 1 bytes @ 0xC
   374  002C                     	ds	1
   375  002D                     ___awdiv@quotient:
   376                           
   377                           ; 2 bytes @ 0xD
   378  002D                     	ds	2
   379  002F                     ??_main:
   380                           
   381                           ; 1 bytes @ 0xF
   382  002F                     	ds	4
   383                           
   384                           	psect	maintext
   385  0021                     __pmaintext:	
   386 ;;
   387 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   388 ;;
   389 ;; *************** function _main *****************
   390 ;; Defined at:
   391 ;;		line 86 in file "main.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, status,2, status,0, pclath, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : B00/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   405 ;;      Params:         0       0       0       0       0
   406 ;;      Locals:         0       0       0       0       0
   407 ;;      Temps:          0       4       0       0       0
   408 ;;      Totals:         0       4       0       0       0
   409 ;;Total ram usage:        4 bytes
   410 ;; Hardware stack levels required when called:    3
   411 ;; This function calls:
   412 ;;		___awdiv
   413 ;;		___bmul
   414 ;;		___wmul
   415 ;; This function is called by:
   416 ;;		Startup code after reset
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           
   421                           ;psect for function _main
   422  0021                     _main:
   423  0021                     l1094:	
   424                           ;incstack = 0
   425                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   426                           
   427                           
   428                           ;main.c: 88:     ANSEL = 0b01100000;
   429  0021  3060               	movlw	96
   430  0022  1683               	bsf	3,5	;RP0=1, select bank3
   431  0023  1703               	bsf	3,6	;RP1=1, select bank3
   432  0024  0088               	movwf	8	;volatile
   433  0025                     l1096:
   434                           
   435                           ;main.c: 89:     ANSELH = 0x00;
   436  0025  0189               	clrf	9	;volatile
   437  0026                     l1098:
   438                           
   439                           ;main.c: 90:     TRISA = 0x00;
   440  0026  1683               	bsf	3,5	;RP0=1, select bank1
   441  0027  1303               	bcf	3,6	;RP1=0, select bank1
   442  0028  0185               	clrf	5	;volatile
   443  0029                     l1100:
   444                           
   445                           ;main.c: 91:     TRISC = 0x00;
   446  0029  0187               	clrf	7	;volatile
   447  002A                     l1102:
   448                           
   449                           ;main.c: 92:     TRISD = 0x00;
   450  002A  0188               	clrf	8	;volatile
   451                           
   452                           ;main.c: 93:     TRISE = 0b0011;
   453  002B  3003               	movlw	3
   454  002C  0089               	movwf	9	;volatile
   455  002D                     l1104:
   456                           
   457                           ;main.c: 95:     ADCON1bits.ADFM = 0;
   458  002D  139F               	bcf	31,7	;volatile
   459  002E                     l1106:
   460                           
   461                           ;main.c: 96:     ADCON1bits.VCFG0 = 0;
   462  002E  121F               	bcf	31,4	;volatile
   463  002F                     l1108:
   464                           
   465                           ;main.c: 97:     ADCON1bits.VCFG1 = 0;
   466  002F  129F               	bcf	31,5	;volatile
   467  0030                     l1110:
   468                           
   469                           ;main.c: 98:     ADCON0bits.ADCS0 = 0;
   470  0030  1283               	bcf	3,5	;RP0=0, select bank0
   471  0031  1303               	bcf	3,6	;RP1=0, select bank0
   472  0032  131F               	bcf	31,6	;volatile
   473  0033                     l1112:
   474                           
   475                           ;main.c: 99:     ADCON0bits.ADCS1 = 1;
   476  0033  179F               	bsf	31,7	;volatile
   477  0034                     l1114:
   478                           
   479                           ;main.c: 100:     ADCON0bits.CHS = 5;
   480  0034  081F               	movf	31,w	;volatile
   481  0035  39C3               	andlw	-61
   482  0036  3814               	iorlw	20
   483  0037  009F               	movwf	31	;volatile
   484  0038                     l1116:
   485                           
   486                           ;main.c: 101:     _delay((unsigned long)((100)*(8000000/4000000.0)));
   487  0038  3041               	movlw	65
   488  0039  1283               	bcf	3,5	;RP0=0, select bank0
   489  003A  1303               	bcf	3,6	;RP1=0, select bank0
   490  003B  00AF               	movwf	??_main
   491  003C                     u587:
   492  003C  0BAF               	decfsz	??_main,f
   493  003D  283C               	goto	u587
   494  003E  283F               	nop2
   495  003F                     l1118:
   496                           
   497                           ;main.c: 102:     ADCON0bits.ADON = 1;
   498  003F  1283               	bcf	3,5	;RP0=0, select bank0
   499  0040  1303               	bcf	3,6	;RP1=0, select bank0
   500  0041  141F               	bsf	31,0	;volatile
   501  0042                     l1120:
   502                           
   503                           ;main.c: 104:     OSCCONbits.IRCF2 = 1;
   504  0042  1683               	bsf	3,5	;RP0=1, select bank1
   505  0043  1303               	bcf	3,6	;RP1=0, select bank1
   506  0044  170F               	bsf	15,6	;volatile
   507  0045                     l1122:
   508                           
   509                           ;main.c: 105:     OSCCONbits.IRCF1 = 1;
   510  0045  168F               	bsf	15,5	;volatile
   511  0046                     l1124:
   512                           
   513                           ;main.c: 106:     OSCCONbits.IRCF0 = 1;
   514  0046  160F               	bsf	15,4	;volatile
   515  0047                     l1126:
   516                           
   517                           ;main.c: 107:     OSCCONbits.SCS = 1;
   518  0047  140F               	bsf	15,0	;volatile
   519  0048                     l1128:
   520                           
   521                           ;main.c: 109:     OPTION_REGbits.T0CS = 0;
   522  0048  1281               	bcf	1,5	;volatile
   523  0049                     l1130:
   524                           
   525                           ;main.c: 110:     OPTION_REGbits.PSA = 0;
   526  0049  1181               	bcf	1,3	;volatile
   527  004A                     l1132:
   528                           
   529                           ;main.c: 111:     OPTION_REGbits.PS2 = 1;
   530  004A  1501               	bsf	1,2	;volatile
   531  004B                     l1134:
   532                           
   533                           ;main.c: 112:     OPTION_REGbits.PS1 = 0;
   534  004B  1081               	bcf	1,1	;volatile
   535  004C                     l1136:
   536                           
   537                           ;main.c: 113:     OPTION_REGbits.PS0 = 1;
   538  004C  1401               	bsf	1,0	;volatile
   539  004D                     l1138:
   540                           
   541                           ;main.c: 114:     TMR0 = 100;
   542  004D  3064               	movlw	100
   543  004E  1283               	bcf	3,5	;RP0=0, select bank0
   544  004F  1303               	bcf	3,6	;RP1=0, select bank0
   545  0050  0081               	movwf	1	;volatile
   546  0051                     l1140:
   547                           
   548                           ;main.c: 116:     INTCONbits.GIE = 1;
   549  0051  178B               	bsf	11,7	;volatile
   550  0052                     l1142:
   551                           
   552                           ;main.c: 117:     INTCONbits.T0IE = 1;
   553  0052  168B               	bsf	11,5	;volatile
   554  0053                     l1144:
   555                           
   556                           ;main.c: 118:     INTCONbits.T0IF = 0;
   557  0053  110B               	bcf	11,2	;volatile
   558  0054                     l1146:
   559                           
   560                           ;main.c: 121:     ADCON0bits.GO = 1;
   561  0054  149F               	bsf	31,1	;volatile
   562  0055                     l1148:
   563                           
   564                           ;main.c: 123:     PORTA = 0;
   565  0055  0185               	clrf	5	;volatile
   566  0056                     l1150:
   567                           
   568                           ;main.c: 124:     PORTB = 0;
   569  0056  0186               	clrf	6	;volatile
   570  0057                     l1152:
   571                           
   572                           ;main.c: 125:     PORTC = 0;
   573  0057  0187               	clrf	7	;volatile
   574  0058                     l1154:
   575                           
   576                           ;main.c: 126:     PORTD = 0;
   577  0058  0188               	clrf	8	;volatile
   578  0059                     l1156:
   579                           
   580                           ;main.c: 128:     centena = 0;
   581  0059  01F4               	clrf	_centena
   582  005A                     l1158:
   583                           
   584                           ;main.c: 129:     decena = 0;
   585  005A  01F3               	clrf	_decena
   586  005B                     l1160:
   587                           
   588                           ;main.c: 130:     unidad = 0;
   589  005B  01F2               	clrf	_unidad
   590  005C                     l1162:
   591                           
   592                           ;main.c: 131:     turno = 3;
   593  005C  3003               	movlw	3
   594  005D  00AF               	movwf	??_main
   595  005E  082F               	movf	??_main,w
   596  005F  00F0               	movwf	_turno
   597  0060                     l1164:
   598                           
   599                           ;main.c: 136:         if(ADCON0bits.GO == 0){
   600  0060  189F               	btfsc	31,1	;volatile
   601  0061  2863               	goto	u551
   602  0062  2864               	goto	u550
   603  0063                     u551:
   604  0063  288F               	goto	l1182
   605  0064                     u550:
   606  0064                     l1166:
   607                           
   608                           ;main.c: 138:             if(ADCON0bits.CHS == 6){
   609  0064  0C1F               	rrf	31,w	;volatile
   610  0065  00AF               	movwf	??_main
   611  0066  0C2F               	rrf	??_main,w
   612  0067  390F               	andlw	15
   613  0068  3A06               	xorlw	6
   614  0069  1D03               	skipz
   615  006A  286C               	goto	u561
   616  006B  286D               	goto	u560
   617  006C                     u561:
   618  006C  2874               	goto	l1172
   619  006D                     u560:
   620  006D                     l1168:
   621                           
   622                           ;main.c: 139:                 PORTA = ADRESH;
   623  006D  081E               	movf	30,w	;volatile
   624  006E  0085               	movwf	5	;volatile
   625  006F                     l1170:
   626                           
   627                           ;main.c: 140:                 ADCON0bits.CHS = 5;
   628  006F  081F               	movf	31,w	;volatile
   629  0070  39C3               	andlw	-61
   630  0071  3814               	iorlw	20
   631  0072  009F               	movwf	31	;volatile
   632                           
   633                           ;main.c: 141:             }
   634  0073  2885               	goto	l1178
   635  0074                     l1172:
   636  0074  0C1F               	rrf	31,w	;volatile
   637  0075  00AF               	movwf	??_main
   638  0076  0C2F               	rrf	??_main,w
   639  0077  390F               	andlw	15
   640  0078  3A05               	xorlw	5
   641  0079  1D03               	skipz
   642  007A  287C               	goto	u571
   643  007B  287D               	goto	u570
   644  007C                     u571:
   645  007C  2885               	goto	l1178
   646  007D                     u570:
   647  007D                     l1174:
   648                           
   649                           ;main.c: 143:                 dividendo = ADRESH;
   650  007D  081E               	movf	30,w	;volatile
   651  007E  00AF               	movwf	??_main
   652  007F  082F               	movf	??_main,w
   653  0080  00F1               	movwf	_dividendo
   654  0081                     l1176:
   655                           
   656                           ;main.c: 144:                 ADCON0bits.CHS = 6;
   657  0081  081F               	movf	31,w	;volatile
   658  0082  39C3               	andlw	-61
   659  0083  3818               	iorlw	24
   660  0084  009F               	movwf	31	;volatile
   661  0085                     l1178:
   662                           
   663                           ;main.c: 146:             _delay((unsigned long)((50)*(8000000/4000000.0)));
   664  0085  3020               	movlw	32
   665  0086  1283               	bcf	3,5	;RP0=0, select bank0
   666  0087  1303               	bcf	3,6	;RP1=0, select bank0
   667  0088  00AF               	movwf	??_main
   668  0089                     u597:
   669  0089  0BAF               	decfsz	??_main,f
   670  008A  2889               	goto	u597
   671  008B  0000               	nop
   672  008C                     l1180:
   673                           
   674                           ;main.c: 148:             ADCON0bits.GO = 1;
   675  008C  1283               	bcf	3,5	;RP0=0, select bank0
   676  008D  1303               	bcf	3,6	;RP1=0, select bank0
   677  008E  149F               	bsf	31,1	;volatile
   678  008F                     l1182:
   679                           
   680                           ;main.c: 151:         centena = (dividendo / 100);
   681  008F  3064               	movlw	100
   682  0090  00A6               	movwf	___awdiv@divisor
   683  0091  3000               	movlw	0
   684  0092  00A7               	movwf	___awdiv@divisor+1
   685  0093  0871               	movf	_dividendo,w
   686  0094  00AF               	movwf	??_main
   687  0095  01B0               	clrf	??_main+1
   688  0096  082F               	movf	??_main,w
   689  0097  00A8               	movwf	___awdiv@dividend
   690  0098  0830               	movf	??_main+1,w
   691  0099  00A9               	movwf	___awdiv@dividend+1
   692  009A  120A  118A  20EF  120A  118A  	fcall	___awdiv
   693  009F  1283               	bcf	3,5	;RP0=0, select bank0
   694  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   695  00A1  0826               	movf	?___awdiv,w
   696  00A2  00B1               	movwf	??_main+2
   697  00A3  0831               	movf	??_main+2,w
   698  00A4  00F4               	movwf	_centena
   699  00A5                     l1184:
   700                           
   701                           ;main.c: 152:         decena = (dividendo - (100 * centena))/10;
   702  00A5  300A               	movlw	10
   703  00A6  00A6               	movwf	___awdiv@divisor
   704  00A7  3000               	movlw	0
   705  00A8  00A7               	movwf	___awdiv@divisor+1
   706  00A9  0874               	movf	_centena,w
   707  00AA  00AF               	movwf	??_main
   708  00AB  01B0               	clrf	??_main+1
   709  00AC  082F               	movf	??_main,w
   710  00AD  00A0               	movwf	___wmul@multiplier
   711  00AE  0830               	movf	??_main+1,w
   712  00AF  00A1               	movwf	___wmul@multiplier+1
   713  00B0  309C               	movlw	156
   714  00B1  00A2               	movwf	___wmul@multiplicand
   715  00B2  30FF               	movlw	255
   716  00B3  00A3               	movwf	___wmul@multiplicand+1
   717  00B4  120A  118A  21A9  120A  118A  	fcall	___wmul
   718  00B9  0871               	movf	_dividendo,w
   719  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   720  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   721  00BC  0720               	addwf	?___wmul,w
   722  00BD  00A8               	movwf	___awdiv@dividend
   723  00BE  0821               	movf	?___wmul+1,w
   724  00BF  1803               	skipnc
   725  00C0  0A21               	incf	?___wmul+1,w
   726  00C1  00A9               	movwf	___awdiv@dividend+1
   727  00C2  120A  118A  20EF  120A  118A  	fcall	___awdiv
   728  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   729  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   730  00C9  0826               	movf	?___awdiv,w
   731  00CA  00B1               	movwf	??_main+2
   732  00CB  0831               	movf	??_main+2,w
   733  00CC  00F3               	movwf	_decena
   734  00CD                     l1186:
   735                           
   736                           ;main.c: 153:         unidad = dividendo - (100 * centena) - (decena * 10);
   737  00CD  309C               	movlw	156
   738  00CE  00AF               	movwf	??_main
   739  00CF  082F               	movf	??_main,w
   740  00D0  00A0               	movwf	___bmul@multiplicand
   741  00D1  0874               	movf	_centena,w
   742  00D2  120A  118A  21D0  120A  118A  	fcall	___bmul
   743  00D7  1283               	bcf	3,5	;RP0=0, select bank0
   744  00D8  1303               	bcf	3,6	;RP1=0, select bank0
   745  00D9  00B0               	movwf	??_main+1
   746  00DA  30F6               	movlw	246
   747  00DB  00B1               	movwf	??_main+2
   748  00DC  0831               	movf	??_main+2,w
   749  00DD  00A0               	movwf	___bmul@multiplicand
   750  00DE  0873               	movf	_decena,w
   751  00DF  120A  118A  21D0  120A  118A  	fcall	___bmul
   752  00E4  1283               	bcf	3,5	;RP0=0, select bank0
   753  00E5  1303               	bcf	3,6	;RP1=0, select bank0
   754  00E6  0730               	addwf	??_main+1,w
   755  00E7  0771               	addwf	_dividendo,w
   756  00E8  00B2               	movwf	??_main+3
   757  00E9  0832               	movf	??_main+3,w
   758  00EA  00F2               	movwf	_unidad
   759  00EB  2860               	goto	l1164
   760  00EC  120A  118A  2812   	ljmp	start
   761  00EF                     __end_of_main:
   762                           
   763                           	psect	text1
   764  01A9                     __ptext1:	
   765 ;; *************** function ___wmul *****************
   766 ;; Defined at:
   767 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;  multiplier      2    0[BANK0 ] unsigned int 
   770 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   771 ;; Auto vars:     Size  Location     Type
   772 ;;  product         2    4[BANK0 ] unsigned int 
   773 ;; Return value:  Size  Location     Type
   774 ;;                  2    0[BANK0 ] unsigned int 
   775 ;; Registers used:
   776 ;;		wreg, status,2, status,0
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   782 ;;      Params:         0       4       0       0       0
   783 ;;      Locals:         0       2       0       0       0
   784 ;;      Temps:          0       0       0       0       0
   785 ;;      Totals:         0       6       0       0       0
   786 ;;Total ram usage:        6 bytes
   787 ;; Hardware stack levels used:    1
   788 ;; Hardware stack levels required when called:    2
   789 ;; This function calls:
   790 ;;		Nothing
   791 ;; This function is called by:
   792 ;;		_main
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           
   797                           ;psect for function ___wmul
   798  01A9                     ___wmul:
   799  01A9                     l1066:	
   800                           ;incstack = 0
   801                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   802                           
   803  01A9  1283               	bcf	3,5	;RP0=0, select bank0
   804  01AA  1303               	bcf	3,6	;RP1=0, select bank0
   805  01AB  01A4               	clrf	___wmul@product
   806  01AC  01A5               	clrf	___wmul@product+1
   807  01AD                     l1068:
   808  01AD  1C20               	btfss	___wmul@multiplier,0
   809  01AE  29B0               	goto	u491
   810  01AF  29B1               	goto	u490
   811  01B0                     u491:
   812  01B0  29B7               	goto	l168
   813  01B1                     u490:
   814  01B1                     l1070:
   815  01B1  0822               	movf	___wmul@multiplicand,w
   816  01B2  07A4               	addwf	___wmul@product,f
   817  01B3  1803               	skipnc
   818  01B4  0AA5               	incf	___wmul@product+1,f
   819  01B5  0823               	movf	___wmul@multiplicand+1,w
   820  01B6  07A5               	addwf	___wmul@product+1,f
   821  01B7                     l168:
   822  01B7  3001               	movlw	1
   823  01B8                     u505:
   824  01B8  1003               	clrc
   825  01B9  0DA2               	rlf	___wmul@multiplicand,f
   826  01BA  0DA3               	rlf	___wmul@multiplicand+1,f
   827  01BB  3EFF               	addlw	-1
   828  01BC  1D03               	skipz
   829  01BD  29B8               	goto	u505
   830  01BE                     l1072:
   831  01BE  3001               	movlw	1
   832  01BF                     u515:
   833  01BF  1003               	clrc
   834  01C0  0CA1               	rrf	___wmul@multiplier+1,f
   835  01C1  0CA0               	rrf	___wmul@multiplier,f
   836  01C2  3EFF               	addlw	-1
   837  01C3  1D03               	skipz
   838  01C4  29BF               	goto	u515
   839  01C5                     l1074:
   840  01C5  0820               	movf	___wmul@multiplier,w
   841  01C6  0421               	iorwf	___wmul@multiplier+1,w
   842  01C7  1D03               	btfss	3,2
   843  01C8  29CA               	goto	u521
   844  01C9  29CB               	goto	u520
   845  01CA                     u521:
   846  01CA  29AD               	goto	l1068
   847  01CB                     u520:
   848  01CB                     l1076:
   849  01CB  0825               	movf	___wmul@product+1,w
   850  01CC  00A1               	movwf	?___wmul+1
   851  01CD  0824               	movf	___wmul@product,w
   852  01CE  00A0               	movwf	?___wmul
   853  01CF                     l170:
   854  01CF  0008               	return
   855  01D0                     __end_of___wmul:
   856                           
   857                           	psect	text2
   858  01D0                     __ptext2:	
   859 ;; *************** function ___bmul *****************
   860 ;; Defined at:
   861 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;  multiplier      1    wreg     unsigned char 
   864 ;;  multiplicand    1    0[BANK0 ] unsigned char 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  multiplier      1    3[BANK0 ] unsigned char 
   867 ;;  product         1    2[BANK0 ] unsigned char 
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      unsigned char 
   870 ;; Registers used:
   871 ;;		wreg, status,2, status,0
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   877 ;;      Params:         0       1       0       0       0
   878 ;;      Locals:         0       2       0       0       0
   879 ;;      Temps:          0       1       0       0       0
   880 ;;      Totals:         0       4       0       0       0
   881 ;;Total ram usage:        4 bytes
   882 ;; Hardware stack levels used:    1
   883 ;; Hardware stack levels required when called:    2
   884 ;; This function calls:
   885 ;;		Nothing
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           
   892                           ;psect for function ___bmul
   893  01D0                     ___bmul:
   894                           
   895                           ;incstack = 0
   896                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   897                           ;___bmul@multiplier stored from wreg
   898  01D0  1283               	bcf	3,5	;RP0=0, select bank0
   899  01D1  1303               	bcf	3,6	;RP1=0, select bank0
   900  01D2  00A3               	movwf	___bmul@multiplier
   901  01D3                     l1080:
   902  01D3  01A2               	clrf	___bmul@product
   903  01D4                     l1082:
   904  01D4  1C23               	btfss	___bmul@multiplier,0
   905  01D5  29D7               	goto	u531
   906  01D6  29D8               	goto	u530
   907  01D7                     u531:
   908  01D7  29DC               	goto	l1086
   909  01D8                     u530:
   910  01D8                     l1084:
   911  01D8  0820               	movf	___bmul@multiplicand,w
   912  01D9  00A1               	movwf	??___bmul
   913  01DA  0821               	movf	??___bmul,w
   914  01DB  07A2               	addwf	___bmul@product,f
   915  01DC                     l1086:
   916  01DC  1003               	clrc
   917  01DD  0DA0               	rlf	___bmul@multiplicand,f
   918  01DE                     l1088:
   919  01DE  1003               	clrc
   920  01DF  0CA3               	rrf	___bmul@multiplier,f
   921  01E0  0823               	movf	___bmul@multiplier,w
   922  01E1  1D03               	btfss	3,2
   923  01E2  29E4               	goto	u541
   924  01E3  29E5               	goto	u540
   925  01E4                     u541:
   926  01E4  29D4               	goto	l1082
   927  01E5                     u540:
   928  01E5                     l1090:
   929  01E5  0822               	movf	___bmul@product,w
   930  01E6                     l194:
   931  01E6  0008               	return
   932  01E7                     __end_of___bmul:
   933                           
   934                           	psect	text3
   935  00EF                     __ptext3:	
   936 ;; *************** function ___awdiv *****************
   937 ;; Defined at:
   938 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  divisor         2    6[BANK0 ] int 
   941 ;;  dividend        2    8[BANK0 ] int 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  quotient        2   13[BANK0 ] int 
   944 ;;  sign            1   12[BANK0 ] unsigned char 
   945 ;;  counter         1   11[BANK0 ] unsigned char 
   946 ;; Return value:  Size  Location     Type
   947 ;;                  2    6[BANK0 ] int 
   948 ;; Registers used:
   949 ;;		wreg, status,2, status,0
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   955 ;;      Params:         0       4       0       0       0
   956 ;;      Locals:         0       4       0       0       0
   957 ;;      Temps:          0       1       0       0       0
   958 ;;      Totals:         0       9       0       0       0
   959 ;;Total ram usage:        9 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; Hardware stack levels required when called:    2
   962 ;; This function calls:
   963 ;;		Nothing
   964 ;; This function is called by:
   965 ;;		_main
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           
   970                           ;psect for function ___awdiv
   971  00EF                     ___awdiv:
   972  00EF                     l898:	
   973                           ;incstack = 0
   974                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   975                           
   976  00EF  1283               	bcf	3,5	;RP0=0, select bank0
   977  00F0  1303               	bcf	3,6	;RP1=0, select bank0
   978  00F1  01AC               	clrf	___awdiv@sign
   979  00F2                     l900:
   980  00F2  1FA7               	btfss	___awdiv@divisor+1,7
   981  00F3  28F5               	goto	u311
   982  00F4  28F6               	goto	u310
   983  00F5                     u311:
   984  00F5  28FD               	goto	l906
   985  00F6                     u310:
   986  00F6                     l902:
   987  00F6  09A6               	comf	___awdiv@divisor,f
   988  00F7  09A7               	comf	___awdiv@divisor+1,f
   989  00F8  0AA6               	incf	___awdiv@divisor,f
   990  00F9  1903               	skipnz
   991  00FA  0AA7               	incf	___awdiv@divisor+1,f
   992  00FB                     l904:
   993  00FB  01AC               	clrf	___awdiv@sign
   994  00FC  0AAC               	incf	___awdiv@sign,f
   995  00FD                     l906:
   996  00FD  1FA9               	btfss	___awdiv@dividend+1,7
   997  00FE  2900               	goto	u321
   998  00FF  2901               	goto	u320
   999  0100                     u321:
  1000  0100  290A               	goto	l912
  1001  0101                     u320:
  1002  0101                     l908:
  1003  0101  09A8               	comf	___awdiv@dividend,f
  1004  0102  09A9               	comf	___awdiv@dividend+1,f
  1005  0103  0AA8               	incf	___awdiv@dividend,f
  1006  0104  1903               	skipnz
  1007  0105  0AA9               	incf	___awdiv@dividend+1,f
  1008  0106                     l910:
  1009  0106  3001               	movlw	1
  1010  0107  00AA               	movwf	??___awdiv
  1011  0108  082A               	movf	??___awdiv,w
  1012  0109  06AC               	xorwf	___awdiv@sign,f
  1013  010A                     l912:
  1014  010A  01AD               	clrf	___awdiv@quotient
  1015  010B  01AE               	clrf	___awdiv@quotient+1
  1016  010C                     l914:
  1017  010C  0826               	movf	___awdiv@divisor,w
  1018  010D  0427               	iorwf	___awdiv@divisor+1,w
  1019  010E  1903               	btfsc	3,2
  1020  010F  2911               	goto	u331
  1021  0110  2912               	goto	u330
  1022  0111                     u331:
  1023  0111  2949               	goto	l934
  1024  0112                     u330:
  1025  0112                     l916:
  1026  0112  01AB               	clrf	___awdiv@counter
  1027  0113  0AAB               	incf	___awdiv@counter,f
  1028  0114  2920               	goto	l922
  1029  0115                     l918:
  1030  0115  3001               	movlw	1
  1031  0116                     u345:
  1032  0116  1003               	clrc
  1033  0117  0DA6               	rlf	___awdiv@divisor,f
  1034  0118  0DA7               	rlf	___awdiv@divisor+1,f
  1035  0119  3EFF               	addlw	-1
  1036  011A  1D03               	skipz
  1037  011B  2916               	goto	u345
  1038  011C                     l920:
  1039  011C  3001               	movlw	1
  1040  011D  00AA               	movwf	??___awdiv
  1041  011E  082A               	movf	??___awdiv,w
  1042  011F  07AB               	addwf	___awdiv@counter,f
  1043  0120                     l922:
  1044  0120  1FA7               	btfss	___awdiv@divisor+1,7
  1045  0121  2923               	goto	u351
  1046  0122  2924               	goto	u350
  1047  0123                     u351:
  1048  0123  2915               	goto	l918
  1049  0124                     u350:
  1050  0124                     l924:
  1051  0124  3001               	movlw	1
  1052  0125                     u365:
  1053  0125  1003               	clrc
  1054  0126  0DAD               	rlf	___awdiv@quotient,f
  1055  0127  0DAE               	rlf	___awdiv@quotient+1,f
  1056  0128  3EFF               	addlw	-1
  1057  0129  1D03               	skipz
  1058  012A  2925               	goto	u365
  1059  012B  0827               	movf	___awdiv@divisor+1,w
  1060  012C  0229               	subwf	___awdiv@dividend+1,w
  1061  012D  1D03               	skipz
  1062  012E  2931               	goto	u375
  1063  012F  0826               	movf	___awdiv@divisor,w
  1064  0130  0228               	subwf	___awdiv@dividend,w
  1065  0131                     u375:
  1066  0131  1C03               	skipc
  1067  0132  2934               	goto	u371
  1068  0133  2935               	goto	u370
  1069  0134                     u371:
  1070  0134  293C               	goto	l930
  1071  0135                     u370:
  1072  0135                     l926:
  1073  0135  0826               	movf	___awdiv@divisor,w
  1074  0136  02A8               	subwf	___awdiv@dividend,f
  1075  0137  0827               	movf	___awdiv@divisor+1,w
  1076  0138  1C03               	skipc
  1077  0139  03A9               	decf	___awdiv@dividend+1,f
  1078  013A  02A9               	subwf	___awdiv@dividend+1,f
  1079  013B                     l928:
  1080  013B  142D               	bsf	___awdiv@quotient,0
  1081  013C                     l930:
  1082  013C  3001               	movlw	1
  1083  013D                     u385:
  1084  013D  1003               	clrc
  1085  013E  0CA7               	rrf	___awdiv@divisor+1,f
  1086  013F  0CA6               	rrf	___awdiv@divisor,f
  1087  0140  3EFF               	addlw	-1
  1088  0141  1D03               	skipz
  1089  0142  293D               	goto	u385
  1090  0143                     l932:
  1091  0143  3001               	movlw	1
  1092  0144  02AB               	subwf	___awdiv@counter,f
  1093  0145  1D03               	btfss	3,2
  1094  0146  2948               	goto	u391
  1095  0147  2949               	goto	u390
  1096  0148                     u391:
  1097  0148  2924               	goto	l924
  1098  0149                     u390:
  1099  0149                     l934:
  1100  0149  082C               	movf	___awdiv@sign,w
  1101  014A  1903               	btfsc	3,2
  1102  014B  294D               	goto	u401
  1103  014C  294E               	goto	u400
  1104  014D                     u401:
  1105  014D  2953               	goto	l938
  1106  014E                     u400:
  1107  014E                     l936:
  1108  014E  09AD               	comf	___awdiv@quotient,f
  1109  014F  09AE               	comf	___awdiv@quotient+1,f
  1110  0150  0AAD               	incf	___awdiv@quotient,f
  1111  0151  1903               	skipnz
  1112  0152  0AAE               	incf	___awdiv@quotient+1,f
  1113  0153                     l938:
  1114  0153  082E               	movf	___awdiv@quotient+1,w
  1115  0154  00A7               	movwf	?___awdiv+1
  1116  0155  082D               	movf	___awdiv@quotient,w
  1117  0156  00A6               	movwf	?___awdiv
  1118  0157                     l321:
  1119  0157  0008               	return
  1120  0158                     __end_of___awdiv:
  1121                           
  1122                           	psect	text4
  1123  0158                     __ptext4:	
  1124 ;; *************** function _isr *****************
  1125 ;; Defined at:
  1126 ;;		line 55 in file "main.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1140 ;;      Params:         0       0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0
  1142 ;;      Temps:          5       0       0       0       0
  1143 ;;      Totals:         5       0       0       0       0
  1144 ;;Total ram usage:        5 bytes
  1145 ;; Hardware stack levels used:    2
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		Interrupt level 1
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           
  1154                           ;psect for function _isr
  1155  0158                     _isr:
  1156  0158                     i1l942:
  1157                           
  1158                           ;main.c: 57:     if (T0IF == 1) {
  1159  0158  1D0B               	btfss	11,2	;volatile
  1160  0159  295B               	goto	u41_21
  1161  015A  295C               	goto	u41_20
  1162  015B                     u41_21:
  1163  015B  299E               	goto	i1l70
  1164  015C                     u41_20:
  1165  015C                     i1l944:
  1166                           
  1167                           ;main.c: 59:         RD0 = 0;
  1168  015C  1008               	bcf	8,0	;volatile
  1169                           
  1170                           ;main.c: 60:         RD1 = 0;
  1171  015D  1088               	bcf	8,1	;volatile
  1172                           
  1173                           ;main.c: 61:         RD2 = 0;
  1174  015E  1108               	bcf	8,2	;volatile
  1175  015F                     i1l946:
  1176                           
  1177                           ;main.c: 62:         if (turno == 3) {
  1178  015F  3003               	movlw	3
  1179  0160  0670               	xorwf	_turno,w
  1180  0161  1D03               	btfss	3,2
  1181  0162  2964               	goto	u42_21
  1182  0163  2965               	goto	u42_20
  1183  0164                     u42_21:
  1184  0164  2970               	goto	i1l952
  1185  0165                     u42_20:
  1186  0165                     i1l948:
  1187                           
  1188                           ;main.c: 63:             PORTC = (num_display[centena]);
  1189  0165  0874               	movf	_centena,w
  1190  0166  3E01               	addlw	low ((_num_display-__stringbase)| (0+32768))
  1191  0167  0084               	movwf	4
  1192  0168  120A  118A  21E7  120A  118A  	fcall	stringdir
  1193  016D  0087               	movwf	7	;volatile
  1194  016E                     i1l950:
  1195                           
  1196                           ;main.c: 64:             RD0 = 1;
  1197  016E  1408               	bsf	8,0	;volatile
  1198                           
  1199                           ;main.c: 65:         }
  1200  016F  2990               	goto	i1l964
  1201  0170                     i1l952:
  1202  0170  3002               	movlw	2
  1203  0171  0670               	xorwf	_turno,w
  1204  0172  1D03               	btfss	3,2
  1205  0173  2975               	goto	u43_21
  1206  0174  2976               	goto	u43_20
  1207  0175                     u43_21:
  1208  0175  2981               	goto	i1l958
  1209  0176                     u43_20:
  1210  0176                     i1l954:
  1211                           
  1212                           ;main.c: 67:             PORTC = (num_display[decena]);
  1213  0176  0873               	movf	_decena,w
  1214  0177  3E01               	addlw	low ((_num_display-__stringbase)| (0+32768))
  1215  0178  0084               	movwf	4
  1216  0179  120A  118A  21E7  120A  118A  	fcall	stringdir
  1217  017E  0087               	movwf	7	;volatile
  1218  017F                     i1l956:
  1219                           
  1220                           ;main.c: 68:             RD1 = 1;
  1221  017F  1488               	bsf	8,1	;volatile
  1222                           
  1223                           ;main.c: 69:         }
  1224  0180  2990               	goto	i1l964
  1225  0181                     i1l958:
  1226  0181  0370               	decf	_turno,w
  1227  0182  1D03               	btfss	3,2
  1228  0183  2985               	goto	u44_21
  1229  0184  2986               	goto	u44_20
  1230  0185                     u44_21:
  1231  0185  2990               	goto	i1l964
  1232  0186                     u44_20:
  1233  0186                     i1l960:
  1234                           
  1235                           ;main.c: 71:             PORTC = (num_display[unidad]);
  1236  0186  0872               	movf	_unidad,w
  1237  0187  3E01               	addlw	low ((_num_display-__stringbase)| (0+32768))
  1238  0188  0084               	movwf	4
  1239  0189  120A  118A  21E7  120A  118A  	fcall	stringdir
  1240  018E  0087               	movwf	7	;volatile
  1241  018F                     i1l962:
  1242                           
  1243                           ;main.c: 72:             RD2 = 1;
  1244  018F  1508               	bsf	8,2	;volatile
  1245  0190                     i1l964:
  1246                           
  1247                           ;main.c: 75:         turno--;
  1248  0190  3001               	movlw	1
  1249  0191  02F0               	subwf	_turno,f
  1250  0192                     i1l966:
  1251                           
  1252                           ;main.c: 76:         if (turno == 0){
  1253  0192  0870               	movf	_turno,w
  1254  0193  1D03               	btfss	3,2
  1255  0194  2996               	goto	u45_21
  1256  0195  2997               	goto	u45_20
  1257  0196                     u45_21:
  1258  0196  299B               	goto	i1l970
  1259  0197                     u45_20:
  1260  0197                     i1l968:
  1261                           
  1262                           ;main.c: 77:             turno = 3;
  1263  0197  3003               	movlw	3
  1264  0198  00F5               	movwf	??_isr
  1265  0199  0875               	movf	??_isr,w
  1266  019A  00F0               	movwf	_turno
  1267  019B                     i1l970:
  1268                           
  1269                           ;main.c: 80:         INTCONbits.T0IF = 0;
  1270  019B  110B               	bcf	11,2	;volatile
  1271                           
  1272                           ;main.c: 81:         TMR0 = 100;
  1273  019C  3064               	movlw	100
  1274  019D  0081               	movwf	1	;volatile
  1275  019E                     i1l70:
  1276  019E  0879               	movf	??_isr+4,w
  1277  019F  00FF               	movwf	btemp+1
  1278  01A0  0878               	movf	??_isr+3,w
  1279  01A1  008A               	movwf	10
  1280  01A2  0877               	movf	??_isr+2,w
  1281  01A3  0084               	movwf	4
  1282  01A4  0E76               	swapf	??_isr+1,w
  1283  01A5  0083               	movwf	3
  1284  01A6  0EFE               	swapf	btemp,f
  1285  01A7  0E7E               	swapf	btemp,w
  1286  01A8  0009               	retfie
  1287  01A9                     __end_of_isr:
  1288  007E                     btemp	set	126	;btemp
  1289  007E                     wtemp0	set	126
  1290                           
  1291                           	psect	intentry
  1292  0004                     __pintentry:	
  1293                           ;incstack = 0
  1294                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath]
  1295                           
  1296  0004                     interrupt_function:
  1297  007E                     saved_w	set	btemp
  1298  0004  00FE               	movwf	btemp
  1299  0005  0E03               	swapf	3,w
  1300  0006  00F6               	movwf	??_isr+1
  1301  0007  0804               	movf	4,w
  1302  0008  00F7               	movwf	??_isr+2
  1303  0009  080A               	movf	10,w
  1304  000A  00F8               	movwf	??_isr+3
  1305  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1306  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1307  000D  087F               	movf	btemp+1,w
  1308  000E  00F9               	movwf	??_isr+4
  1309  000F  120A  118A  2958   	ljmp	_isr
  1310                           
  1311                           	psect	config
  1312                           
  1313                           ;Config register CONFIG1 @ 0x2007
  1314                           ;	Oscillator Selection bits
  1315                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1316                           ;	Watchdog Timer Enable bit
  1317                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1318                           ;	Power-up Timer Enable bit
  1319                           ;	PWRTE = OFF, PWRT disabled
  1320                           ;	RE3/MCLR pin function select bit
  1321                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1322                           ;	Code Protection bit
  1323                           ;	CP = OFF, Program memory code protection is disabled
  1324                           ;	Data Code Protection bit
  1325                           ;	CPD = OFF, Data memory code protection is disabled
  1326                           ;	Brown Out Reset Selection bits
  1327                           ;	BOREN = OFF, BOR disabled
  1328                           ;	Internal External Switchover bit
  1329                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1330                           ;	Fail-Safe Clock Monitor Enabled bit
  1331                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1332                           ;	Low Voltage Programming Enable bit
  1333                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1334                           ;	In-Circuit Debugger Mode bit
  1335                           ;	DEBUG = 0x1, unprogrammed default
  1336  2007                     	org	8199
  1337  2007  30D4               	dw	12500
  1338                           
  1339                           ;Config register CONFIG2 @ 0x2008
  1340                           ;	Brown-out Reset Selection bit
  1341                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1342                           ;	Flash Program Memory Self Write Enable bits
  1343                           ;	WRT = OFF, Write protection off
  1344  2008                     	org	8200
  1345  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     19      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1236
                                             15 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     316
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___bmul
   ___wmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      14       5       25.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Apr 25 22:43:41 2021

                      pc 0002           ___bmul@product 0022             ___awdiv@sign 002C  
                     fsr 0004      ___wmul@multiplicand 0022                      l321 0157  
                    l170 01CF                      l168 01B7                      l194 01E6  
                    l900 00F2                      l910 0106                      l902 00F6  
                    l920 011C                      l912 010A                      l904 00FB  
                    l930 013C                      l922 0120                      l914 010C  
                    l906 00FD                      l932 0143                      l924 0124  
                    l916 0112                      l908 0101                      l926 0135  
                    l918 0115                      l934 0149                      l936 014E  
                    l928 013B                      l938 0153                      l898 00EF  
                    _RD0 0040                      _RD1 0041                      _RD2 0042  
                    u310 00F6                      u311 00F5                      u400 014E  
                    u320 0101                      u401 014D                      u321 0100  
                    u330 0112                      u331 0111                      u350 0124  
                    u351 0123                      u520 01CB                      u345 0116  
                    u521 01CA                      u505 01B8                      u370 0135  
                    u530 01D8                      u371 0134                      u531 01D7  
                    u515 01BF                      u540 01E5                      u365 0125  
                    u541 01E4                      u390 0149                      u550 0064  
                    u391 0148                      u375 0131                      u551 0063  
                    u560 006D                      u385 013D                      u561 006C  
                    u490 01B1                      u570 007D                      u491 01B0  
                    u571 007C                      u587 003C                      u597 0089  
                    _isr 0158                      fsr0 0004                     l1100 0029  
                   l1110 0030                     l1102 002A                     l1120 0042  
                   l1112 0033                     l1104 002D                     l1130 0049  
                   l1122 0045                     l1114 0034                     l1106 002E  
                   l1140 0051                     l1132 004A                     l1124 0046  
                   l1116 0038                     l1108 002F                     l1070 01B1  
                   l1150 0056                     l1142 0052                     l1134 004B  
                   l1126 0047                     l1118 003F                     l1080 01D3  
                   l1072 01BE                     l1160 005B                     l1152 0057  
                   l1144 0053                     l1136 004C                     l1128 0048  
                   l1090 01E5                     l1082 01D4                     l1074 01C5  
                   l1066 01A9                     l1170 006F                     l1162 005C  
                   l1154 0058                     l1146 0054                     l1138 004D  
                   l1084 01D8                     l1076 01CB                     l1068 01AD  
                   l1180 008C                     l1172 0074                     l1164 0060  
                   l1156 0059                     l1148 0055                     l1086 01DC  
                   l1174 007D                     l1166 0064                     l1182 008F  
                   l1158 005A                     l1094 0021                     l1088 01DE  
                   l1184 00A5                     l1176 0081                     l1168 006D  
                   l1096 0025                     l1186 00CD                     l1178 0085  
                   l1098 0026                     ?_isr 0075                     _T0IF 005A  
                   i1l70 019E                     _TMR0 0001                     _main 0021  
                   btemp 007E                     start 0012        ___bmul@multiplier 0023  
                  ??_isr 0075                    ?_main 0075          __end_of___awdiv 0158  
                  _ANSEL 0188          ___awdiv@divisor 0026                    i1l950 016E  
                  i1l942 0158                    i1l960 0186                    i1l952 0170  
                  i1l944 015C                    i1l970 019B                    i1l962 018F  
                  i1l954 0176                    i1l946 015F                    i1l956 017F  
                  i1l964 0190                    i1l948 0165                    i1l966 0192  
                  i1l958 0181                    i1l968 0197          ___awdiv@counter 002B  
                  u41_20 015C                    u41_21 015B                    u42_20 0165  
                  u42_21 0164                    u43_20 0176                    u43_21 0175  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    u44_20 0186                    u44_21 0185  
                  u45_20 0197                    u45_21 0196                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _turno 0070                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0015             __end_of_main 00EF  
                 ??_main 002F                   _ADRESH 001E         ___awdiv@dividend 0028  
                 _ANSELH 0189                   ___bmul 01D0                   ___wmul 01A9  
              ??___awdiv 002A                   _decena 0073         ___awdiv@quotient 002D  
                 _unidad 0072                   saved_w 007E  __end_of__initialization 001D  
    ___bmul@multiplicand 0020           __pcstackCOMMON 0075           _OPTION_REGbits 0081  
             __pbssBANK0 0033               __pmaintext 0021                  ?___bmul 0020  
                ?___wmul 0020               __pintentry 0004               __stringtab 01E7  
        __size_of___bmul 0017                  ___awdiv 00EF          __size_of___wmul 0027  
                _centena 0074                  __ptext1 01A9                  __ptext2 01D0  
                __ptext3 00EF                  __ptext4 0158                  _divisor 0033  
           __size_of_isr 0051     end_of_initialization 001D           __end_of___bmul 01E7  
         __end_of___wmul 01D0      start_initialization 0015              __end_of_isr 01A9  
               ??___bmul 0021                 ??___wmul 0024              __pbssCOMMON 0070  
              ___latbits 0002            __pcstackBANK0 0020                 ?___awdiv 0026  
              _dividendo 0071                __pstrings 01E7        interrupt_function 0004  
         ___wmul@product 0024               _ADCON0bits 001F              __stringbase 01EC  
             _ADCON1bits 009F        ___wmul@multiplier 0020         __size_of___awdiv 0069  
     __end_of__stringtab 01ED      __end_of_num_display 01F7            __size_of_main 00CE  
             _INTCONbits 000B                 intlevel1 0000                stringcode 01E7  
             _OSCCONbits 008F              _num_display 01ED                 stringdir 01E7  
               stringtab 01E7  
