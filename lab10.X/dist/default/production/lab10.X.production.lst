

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon May 10 01:06:59 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  001A                     _RCREG	set	26
   206  0019                     _TXREG	set	25
   207  000C                     _PIR1bits	set	12
   208  0018                     _RCSTAbits	set	24
   209  0006                     _PORTB	set	6
   210  0005                     _PORTA	set	5
   211  009A                     _SPBRGH	set	154
   212  0099                     _SPBRG	set	153
   213  0098                     _TXSTAbits	set	152
   214  008F                     _OSCCONbits	set	143
   215  0086                     _TRISB	set	134
   216  0085                     _TRISA	set	133
   217  0187                     _BAUDCTLbits	set	391
   218  0189                     _ANSELH	set	393
   219  0188                     _ANSEL	set	392
   220                           
   221                           	psect	strings
   222  0003                     __pstrings:
   223  0003                     stringtab:
   224  0003                     __stringtab:
   225  0003                     stringcode:	
   226                           ;	String table - string pointers are 1 byte each
   227                           
   228  0003                     stringdir:
   229  0003  3000               	movlw	high stringdir
   230  0004  008A               	movwf	10
   231  0005  0804               	movf	4,w
   232  0006  0A84               	incf	4,f
   233  0007  0782               	addwf	2,f
   234  0008                     __stringbase:
   235  0008  3400               	retlw	0
   236  0009                     __end_of__stringtab:
   237  0009                     STR_7:
   238  0009  3420               	retlw	32	;' '
   239  000A  3449               	retlw	73	;'I'
   240  000B  346E               	retlw	110	;'n'
   241  000C  3467               	retlw	103	;'g'
   242  000D  3472               	retlw	114	;'r'
   243  000E  3465               	retlw	101	;'e'
   244  000F  3473               	retlw	115	;'s'
   245  0010  3461               	retlw	97	;'a'
   246  0011  3472               	retlw	114	;'r'
   247  0012  3420               	retlw	32	;' '
   248  0013  3463               	retlw	99	;'c'
   249  0014  3461               	retlw	97	;'a'
   250  0015  3472               	retlw	114	;'r'
   251  0016  3461               	retlw	97	;'a'
   252  0017  3463               	retlw	99	;'c'
   253  0018  3474               	retlw	116	;'t'
   254  0019  3465               	retlw	101	;'e'
   255  001A  3472               	retlw	114	;'r'
   256  001B  3420               	retlw	32	;' '
   257  001C  3470               	retlw	112	;'p'
   258  001D  3461               	retlw	97	;'a'
   259  001E  3472               	retlw	114	;'r'
   260  001F  3461               	retlw	97	;'a'
   261  0020  3420               	retlw	32	;' '
   262  0021  3465               	retlw	101	;'e'
   263  0022  346C               	retlw	108	;'l'
   264  0023  3420               	retlw	32	;' '
   265  0024  3470               	retlw	112	;'p'
   266  0025  3475               	retlw	117	;'u'
   267  0026  3465               	retlw	101	;'e'
   268  0027  3472               	retlw	114	;'r'
   269  0028  3474               	retlw	116	;'t'
   270  0029  346F               	retlw	111	;'o'
   271  002A  3420               	retlw	32	;' '
   272  002B  3442               	retlw	66	;'B'
   273  002C  343A               	retlw	58	;':'
   274  002D  3420               	retlw	32	;' '
   275  002E  3400               	retlw	0
   276  002F                     STR_2:
   277  002F  3420               	retlw	32	;' '
   278  0030  3431               	retlw	49	;'1'
   279  0031  3429               	retlw	41	;')'
   280  0032  3420               	retlw	32	;' '
   281  0033  3444               	retlw	68	;'D'
   282  0034  3465               	retlw	101	;'e'
   283  0035  3473               	retlw	115	;'s'
   284  0036  3470               	retlw	112	;'p'
   285  0037  346C               	retlw	108	;'l'
   286  0038  3465               	retlw	101	;'e'
   287  0039  3467               	retlw	103	;'g'
   288  003A  3461               	retlw	97	;'a'
   289  003B  3472               	retlw	114	;'r'
   290  003C  3420               	retlw	32	;' '
   291  003D  3463               	retlw	99	;'c'
   292  003E  3461               	retlw	97	;'a'
   293  003F  3464               	retlw	100	;'d'
   294  0040  3465               	retlw	101	;'e'
   295  0041  346E               	retlw	110	;'n'
   296  0042  3461               	retlw	97	;'a'
   297  0043  3420               	retlw	32	;' '
   298  0044  3464               	retlw	100	;'d'
   299  0045  3465               	retlw	101	;'e'
   300  0046  3420               	retlw	32	;' '
   301  0047  3463               	retlw	99	;'c'
   302  0048  3461               	retlw	97	;'a'
   303  0049  3472               	retlw	114	;'r'
   304  004A  3461               	retlw	97	;'a'
   305  004B  3463               	retlw	99	;'c'
   306  004C  3474               	retlw	116	;'t'
   307  004D  3465               	retlw	101	;'e'
   308  004E  3472               	retlw	114	;'r'
   309  004F  3465               	retlw	101	;'e'
   310  0050  3473               	retlw	115	;'s'
   311  0051  3420               	retlw	32	;' '
   312  0052  340D               	retlw	13
   313  0053  3400               	retlw	0
   314  0054                     STR_6:
   315  0054  3420               	retlw	32	;' '
   316  0055  3449               	retlw	73	;'I'
   317  0056  346E               	retlw	110	;'n'
   318  0057  3467               	retlw	103	;'g'
   319  0058  3472               	retlw	114	;'r'
   320  0059  3465               	retlw	101	;'e'
   321  005A  3473               	retlw	115	;'s'
   322  005B  3461               	retlw	97	;'a'
   323  005C  3472               	retlw	114	;'r'
   324  005D  3420               	retlw	32	;' '
   325  005E  3463               	retlw	99	;'c'
   326  005F  3461               	retlw	97	;'a'
   327  0060  3472               	retlw	114	;'r'
   328  0061  3461               	retlw	97	;'a'
   329  0062  3474               	retlw	116	;'t'
   330  0063  3465               	retlw	101	;'e'
   331  0064  3472               	retlw	114	;'r'
   332  0065  3420               	retlw	32	;' '
   333  0066  3470               	retlw	112	;'p'
   334  0067  3461               	retlw	97	;'a'
   335  0068  3472               	retlw	114	;'r'
   336  0069  3461               	retlw	97	;'a'
   337  006A  3420               	retlw	32	;' '
   338  006B  3465               	retlw	101	;'e'
   339  006C  346C               	retlw	108	;'l'
   340  006D  3420               	retlw	32	;' '
   341  006E  3470               	retlw	112	;'p'
   342  006F  3475               	retlw	117	;'u'
   343  0070  3465               	retlw	101	;'e'
   344  0071  3472               	retlw	114	;'r'
   345  0072  3474               	retlw	116	;'t'
   346  0073  346F               	retlw	111	;'o'
   347  0074  3420               	retlw	32	;' '
   348  0075  3441               	retlw	65	;'A'
   349  0076  343A               	retlw	58	;':'
   350  0077  3420               	retlw	32	;' '
   351  0078  3400               	retlw	0
   352  0079                     STR_1:
   353  0079  340D               	retlw	13
   354  007A  3420               	retlw	32	;' '
   355  007B  3451               	retlw	81	;'Q'
   356  007C  3475               	retlw	117	;'u'
   357  007D  3465               	retlw	101	;'e'
   358  007E  3420               	retlw	32	;' '
   359  007F  3461               	retlw	97	;'a'
   360  0080  3463               	retlw	99	;'c'
   361  0081  3463               	retlw	99	;'c'
   362  0082  3469               	retlw	105	;'i'
   363  0083  346F               	retlw	111	;'o'
   364  0084  346E               	retlw	110	;'n'
   365  0085  3420               	retlw	32	;' '
   366  0086  3464               	retlw	100	;'d'
   367  0087  3465               	retlw	101	;'e'
   368  0088  3473               	retlw	115	;'s'
   369  0089  3465               	retlw	101	;'e'
   370  008A  3461               	retlw	97	;'a'
   371  008B  3420               	retlw	32	;' '
   372  008C  3465               	retlw	101	;'e'
   373  008D  346A               	retlw	106	;'j'
   374  008E  3465               	retlw	101	;'e'
   375  008F  3463               	retlw	99	;'c'
   376  0090  3475               	retlw	117	;'u'
   377  0091  3474               	retlw	116	;'t'
   378  0092  3461               	retlw	97	;'a'
   379  0093  3472               	retlw	114	;'r'
   380  0094  343F               	retlw	63	;'?'
   381  0095  3420               	retlw	32	;' '
   382  0096  340D               	retlw	13
   383  0097  3400               	retlw	0
   384  0098                     STR_4:
   385  0098  3420               	retlw	32	;' '
   386  0099  3433               	retlw	51	;'3'
   387  009A  3429               	retlw	41	;')'
   388  009B  3420               	retlw	32	;' '
   389  009C  3443               	retlw	67	;'C'
   390  009D  3461               	retlw	97	;'a'
   391  009E  346D               	retlw	109	;'m'
   392  009F  3462               	retlw	98	;'b'
   393  00A0  3469               	retlw	105	;'i'
   394  00A1  3461               	retlw	97	;'a'
   395  00A2  3472               	retlw	114	;'r'
   396  00A3  3420               	retlw	32	;' '
   397  00A4  3450               	retlw	80	;'P'
   398  00A5  344F               	retlw	79	;'O'
   399  00A6  3452               	retlw	82	;'R'
   400  00A7  3454               	retlw	84	;'T'
   401  00A8  3442               	retlw	66	;'B'
   402  00A9  3420               	retlw	32	;' '
   403  00AA  340D               	retlw	13
   404  00AB  3420               	retlw	32	;' '
   405  00AC  340D               	retlw	13
   406  00AD  3400               	retlw	0
   407  00AE                     STR_3:
   408  00AE  3420               	retlw	32	;' '
   409  00AF  3432               	retlw	50	;'2'
   410  00B0  3429               	retlw	41	;')'
   411  00B1  3420               	retlw	32	;' '
   412  00B2  3443               	retlw	67	;'C'
   413  00B3  3461               	retlw	97	;'a'
   414  00B4  346D               	retlw	109	;'m'
   415  00B5  3462               	retlw	98	;'b'
   416  00B6  3469               	retlw	105	;'i'
   417  00B7  3461               	retlw	97	;'a'
   418  00B8  3472               	retlw	114	;'r'
   419  00B9  3420               	retlw	32	;' '
   420  00BA  3450               	retlw	80	;'P'
   421  00BB  344F               	retlw	79	;'O'
   422  00BC  3452               	retlw	82	;'R'
   423  00BD  3454               	retlw	84	;'T'
   424  00BE  3441               	retlw	65	;'A'
   425  00BF  3420               	retlw	32	;' '
   426  00C0  340D               	retlw	13
   427  00C1  3400               	retlw	0
   428  00C2                     STR_5:
   429  00C2  3420               	retlw	32	;' '
   430  00C3  3442               	retlw	66	;'B'
   431  00C4  3469               	retlw	105	;'i'
   432  00C5  3465               	retlw	101	;'e'
   433  00C6  346E               	retlw	110	;'n'
   434  00C7  3476               	retlw	118	;'v'
   435  00C8  3465               	retlw	101	;'e'
   436  00C9  346E               	retlw	110	;'n'
   437  00CA  3469               	retlw	105	;'i'
   438  00CB  3464               	retlw	100	;'d'
   439  00CC  346F               	retlw	111	;'o'
   440  00CD  3420               	retlw	32	;' '
   441  00CE  340D               	retlw	13
   442  00CF  3400               	retlw	0
   443                           
   444                           	psect	cinit
   445  07FB                     start_initialization:	
   446                           ; #config settings
   447                           
   448  07FB                     __initialization:
   449                           
   450                           ; Clear objects allocated to COMMON
   451  07FB  01F5               	clrf	__pbssCOMMON& (0+127)
   452  07FC                     end_of_initialization:	
   453                           ;End of C runtime variable initialization code
   454                           
   455  07FC                     __end_of__initialization:
   456  07FC  0183               	clrf	3
   457  07FD  120A  118A  2F6A   	ljmp	_main	;jump to C main() function
   458                           
   459                           	psect	bssCOMMON
   460  0075                     __pbssCOMMON:
   461  0075                     _valor:
   462  0075                     	ds	1
   463                           
   464                           	psect	cstackCOMMON
   465  0070                     __pcstackCOMMON:
   466  0070                     ?_USART_Cadena:
   467  0070                     ?_USART_Rx:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ??_USART_Rx:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_main:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?_USART_Tx:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ??_USART_Tx:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     USART_Tx@data:	
   483                           ; 1 bytes @ 0x0
   484                           
   485                           
   486                           ; 1 bytes @ 0x0
   487  0070                     	ds	1
   488  0071                     ??_USART_Cadena:
   489                           
   490                           ; 1 bytes @ 0x1
   491  0071                     	ds	1
   492  0072                     USART_Cadena@str:
   493                           
   494                           ; 1 bytes @ 0x2
   495  0072                     	ds	1
   496  0073                     ??_main:
   497                           
   498                           ; 1 bytes @ 0x3
   499  0073                     	ds	2
   500                           
   501                           	psect	maintext
   502  076A                     __pmaintext:	
   503 ;;
   504 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   505 ;;
   506 ;; *************** function _main *****************
   507 ;; Defined at:
   508 ;;		line 54 in file "main.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;		None
   511 ;; Auto vars:     Size  Location     Type
   512 ;;		None
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      void 
   515 ;; Registers used:
   516 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   517 ;; Tracked objects:
   518 ;;		On entry : B00/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   522 ;;      Params:         0       0       0       0       0
   523 ;;      Locals:         0       0       0       0       0
   524 ;;      Temps:          2       0       0       0       0
   525 ;;      Totals:         2       0       0       0       0
   526 ;;Total ram usage:        2 bytes
   527 ;; Hardware stack levels required when called:    2
   528 ;; This function calls:
   529 ;;		_USART_Cadena
   530 ;;		_USART_Rx
   531 ;; This function is called by:
   532 ;;		Startup code after reset
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           
   537                           ;psect for function _main
   538  076A                     _main:
   539  076A                     l773:	
   540                           ;incstack = 0
   541                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   542                           
   543                           
   544                           ;main.c: 56:     ANSEL = 0X00;
   545  076A  1683               	bsf	3,5	;RP0=1, select bank3
   546  076B  1703               	bsf	3,6	;RP1=1, select bank3
   547  076C  0188               	clrf	8	;volatile
   548                           
   549                           ;main.c: 57:     ANSELH = 0x00;
   550  076D  0189               	clrf	9	;volatile
   551                           
   552                           ;main.c: 59:     TRISA = 0x00;
   553  076E  1683               	bsf	3,5	;RP0=1, select bank1
   554  076F  1303               	bcf	3,6	;RP1=0, select bank1
   555  0770  0185               	clrf	5	;volatile
   556                           
   557                           ;main.c: 60:     TRISB = 0x00;
   558  0771  0186               	clrf	6	;volatile
   559                           
   560                           ;main.c: 62:     PORTA = 0x00;
   561  0772  1283               	bcf	3,5	;RP0=0, select bank0
   562  0773  1303               	bcf	3,6	;RP1=0, select bank0
   563  0774  0185               	clrf	5	;volatile
   564                           
   565                           ;main.c: 63:     PORTB = 0x00;
   566  0775  0186               	clrf	6	;volatile
   567  0776                     l775:
   568                           
   569                           ;main.c: 65:     OSCCONbits.IRCF = 0b111 ;
   570  0776  3070               	movlw	112
   571  0777  1683               	bsf	3,5	;RP0=1, select bank1
   572  0778  1303               	bcf	3,6	;RP1=0, select bank1
   573  0779  048F               	iorwf	15,f	;volatile
   574  077A                     l777:
   575                           
   576                           ;main.c: 66:     OSCCONbits.SCS = 1;
   577  077A  140F               	bsf	15,0	;volatile
   578  077B                     l779:
   579                           
   580                           ;main.c: 69:     TXSTAbits.SYNC = 0;
   581  077B  1218               	bcf	24,4	;volatile
   582  077C                     l781:
   583                           
   584                           ;main.c: 70:     TXSTAbits.BRGH = 1;
   585  077C  1518               	bsf	24,2	;volatile
   586  077D                     l783:
   587                           
   588                           ;main.c: 71:     BAUDCTLbits.BRG16 = 1;
   589  077D  1683               	bsf	3,5	;RP0=1, select bank3
   590  077E  1703               	bsf	3,6	;RP1=1, select bank3
   591  077F  1587               	bsf	7,3	;volatile
   592  0780                     l785:
   593                           
   594                           ;main.c: 73:     SPBRG = 207;
   595  0780  30CF               	movlw	207
   596  0781  1683               	bsf	3,5	;RP0=1, select bank1
   597  0782  1303               	bcf	3,6	;RP1=0, select bank1
   598  0783  0099               	movwf	25	;volatile
   599  0784                     l787:
   600                           
   601                           ;main.c: 74:     SPBRGH = 0;
   602  0784  019A               	clrf	26	;volatile
   603  0785                     l789:
   604                           
   605                           ;main.c: 76:     RCSTAbits.SPEN = 1;
   606  0785  1283               	bcf	3,5	;RP0=0, select bank0
   607  0786  1303               	bcf	3,6	;RP1=0, select bank0
   608  0787  1798               	bsf	24,7	;volatile
   609  0788                     l791:
   610                           
   611                           ;main.c: 77:     RCSTAbits.RX9 = 0;
   612  0788  1318               	bcf	24,6	;volatile
   613  0789                     l793:
   614                           
   615                           ;main.c: 78:     RCSTAbits.CREN = 1;
   616  0789  1618               	bsf	24,4	;volatile
   617  078A                     l795:
   618                           
   619                           ;main.c: 79:     TXSTAbits.TXEN = 1;
   620  078A  1683               	bsf	3,5	;RP0=1, select bank1
   621  078B  1303               	bcf	3,6	;RP1=0, select bank1
   622  078C  1698               	bsf	24,5	;volatile
   623  078D                     l797:
   624                           
   625                           ;main.c: 83:         USART_Cadena("\r Que accion desea ejecutar? \r");
   626  078D  3071               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   627  078E  120A  118A  274B  120A  118A  	fcall	_USART_Cadena
   628  0793                     l799:
   629                           
   630                           ;main.c: 84:         USART_Cadena(" 1) Desplegar cadena de caracteres \r");
   631  0793  3027               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   632  0794  120A  118A  274B  120A  118A  	fcall	_USART_Cadena
   633  0799                     l801:
   634                           
   635                           ;main.c: 85:         USART_Cadena(" 2) Cambiar PORTA \r");
   636  0799  30A6               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   637  079A  120A  118A  274B  120A  118A  	fcall	_USART_Cadena
   638  079F                     l803:
   639                           
   640                           ;main.c: 86:         USART_Cadena(" 3) Cambiar PORTB \r \r");
   641  079F  3090               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   642  07A0  120A  118A  274B  120A  118A  	fcall	_USART_Cadena
   643  07A5                     l42:	
   644                           ;main.c: 88:         while(PIR1bits.RCIF == 0);
   645                           
   646  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   647  07A6  1303               	bcf	3,6	;RP1=0, select bank0
   648  07A7  1E8C               	btfss	12,5	;volatile
   649  07A8  2FAA               	goto	u71
   650  07A9  2FAB               	goto	u70
   651  07AA                     u71:
   652  07AA  2FA5               	goto	l42
   653  07AB                     u70:
   654  07AB                     l805:
   655                           
   656                           ;main.c: 90:         valor = USART_Rx();
   657  07AB  120A  118A  273B  120A  118A  	fcall	_USART_Rx
   658  07B0  00F3               	movwf	??_main
   659  07B1  0873               	movf	??_main,w
   660  07B2  00F5               	movwf	_valor
   661                           
   662                           ;main.c: 92:         switch(valor){
   663  07B3  2FE5               	goto	l819
   664  07B4                     l807:
   665                           
   666                           ;main.c: 94:                 USART_Cadena(" Bienvenido \r");
   667  07B4  30BA               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   668  07B5  120A  118A  274B  120A  118A  	fcall	_USART_Cadena
   669                           
   670                           ;main.c: 95:                 break;
   671  07BA  2F8D               	goto	l797
   672  07BB                     l809:
   673                           
   674                           ;main.c: 98:                 USART_Cadena(" Ingresar carater para el puerto A: ");
   675  07BB  304C               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   676  07BC  120A  118A  274B  120A  118A  	fcall	_USART_Cadena
   677  07C1                     l49:	
   678                           ;main.c: 99:                 while(PIR1bits.RCIF == 0);
   679                           
   680  07C1  1283               	bcf	3,5	;RP0=0, select bank0
   681  07C2  1303               	bcf	3,6	;RP1=0, select bank0
   682  07C3  1E8C               	btfss	12,5	;volatile
   683  07C4  2FC6               	goto	u81
   684  07C5  2FC7               	goto	u80
   685  07C6                     u81:
   686  07C6  2FC1               	goto	l49
   687  07C7                     u80:
   688  07C7                     l811:
   689                           
   690                           ;main.c: 100:                 PORTA = USART_Rx();
   691  07C7  120A  118A  273B  120A  118A  	fcall	_USART_Rx
   692  07CC  1283               	bcf	3,5	;RP0=0, select bank0
   693  07CD  1303               	bcf	3,6	;RP1=0, select bank0
   694  07CE  0085               	movwf	5	;volatile
   695                           
   696                           ;main.c: 101:                 break;
   697  07CF  2F8D               	goto	l797
   698  07D0                     l813:
   699                           
   700                           ;main.c: 104:                 USART_Cadena(" Ingresar caracter para el puerto B: ");
   701  07D0  3001               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   702  07D1  120A  118A  274B  120A  118A  	fcall	_USART_Cadena
   703  07D6                     l53:	
   704                           ;main.c: 105:                 while(PIR1bits.RCIF == 0);
   705                           
   706  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   707  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   708  07D8  1E8C               	btfss	12,5	;volatile
   709  07D9  2FDB               	goto	u91
   710  07DA  2FDC               	goto	u90
   711  07DB                     u91:
   712  07DB  2FD6               	goto	l53
   713  07DC                     u90:
   714  07DC                     l815:
   715                           
   716                           ;main.c: 106:                 PORTB = USART_Rx();
   717  07DC  120A  118A  273B  120A  118A  	fcall	_USART_Rx
   718  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   719  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   720  07E3  0086               	movwf	6	;volatile
   721                           
   722                           ;main.c: 107:                 break;
   723  07E4  2F8D               	goto	l797
   724  07E5                     l819:
   725  07E5  0875               	movf	_valor,w
   726  07E6  00F3               	movwf	??_main
   727  07E7  01F4               	clrf	??_main+1
   728                           
   729                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   730                           ; Switch size 1, requested type "simple"
   731                           ; Number of cases is 1, Range of values is 0 to 0
   732                           ; switch strategies available:
   733                           ; Name         Instructions Cycles
   734                           ; simple_byte            4     3 (average)
   735                           ; direct_byte           11     8 (fixed)
   736                           ; jumptable            260     6 (fixed)
   737                           ;	Chosen strategy is simple_byte
   738  07E8  0874               	movf	??_main+1,w
   739  07E9  3A00               	xorlw	0	; case 0
   740  07EA  1903               	skipnz
   741  07EB  2FED               	goto	l857
   742  07EC  2F8D               	goto	l797
   743  07ED                     l857:
   744                           
   745                           ; Switch size 1, requested type "simple"
   746                           ; Number of cases is 3, Range of values is 49 to 51
   747                           ; switch strategies available:
   748                           ; Name         Instructions Cycles
   749                           ; simple_byte           10     6 (average)
   750                           ; direct_byte           20    11 (fixed)
   751                           ; jumptable            263     9 (fixed)
   752                           ;	Chosen strategy is simple_byte
   753  07ED  0873               	movf	??_main,w
   754  07EE  3A31               	xorlw	49	; case 49
   755  07EF  1903               	skipnz
   756  07F0  2FB4               	goto	l807
   757  07F1  3A03               	xorlw	3	; case 50
   758  07F2  1903               	skipnz
   759  07F3  2FBB               	goto	l809
   760  07F4  3A01               	xorlw	1	; case 51
   761  07F5  1903               	skipnz
   762  07F6  2FD0               	goto	l813
   763  07F7  2F8D               	goto	l797
   764  07F8  120A  118A  2800   	ljmp	start
   765  07FB                     __end_of_main:
   766                           
   767                           	psect	text1
   768  073B                     __ptext1:	
   769 ;; *************** function _USART_Rx *****************
   770 ;; Defined at:
   771 ;;		line 127 in file "main.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      unsigned char 
   778 ;; Registers used:
   779 ;;		wreg
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   785 ;;      Params:         0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0
   787 ;;      Temps:          0       0       0       0       0
   788 ;;      Totals:         0       0       0       0       0
   789 ;;Total ram usage:        0 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; This function calls:
   792 ;;		Nothing
   793 ;; This function is called by:
   794 ;;		_main
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           
   799                           ;psect for function _USART_Rx
   800  073B                     _USART_Rx:
   801  073B                     l677:	
   802                           ;incstack = 0
   803                           ; Regs used in _USART_Rx: [wreg]
   804                           
   805                           
   806                           ;main.c: 128:         return RCREG;
   807  073B  1283               	bcf	3,5	;RP0=0, select bank0
   808  073C  1303               	bcf	3,6	;RP1=0, select bank0
   809  073D  081A               	movf	26,w	;volatile
   810  073E                     l73:
   811  073E  0008               	return
   812  073F                     __end_of_USART_Rx:
   813                           
   814                           	psect	text2
   815  074B                     __ptext2:	
   816 ;; *************** function _USART_Cadena *****************
   817 ;; Defined at:
   818 ;;		line 120 in file "main.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  str             1    wreg     PTR unsigned char 
   821 ;;		 -> STR_7(38), STR_6(37), STR_5(14), STR_4(22), 
   822 ;;		 -> STR_3(20), STR_2(37), STR_1(31), 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;  str             1    2[COMMON] PTR unsigned char 
   825 ;;		 -> STR_7(38), STR_6(37), STR_5(14), STR_4(22), 
   826 ;;		 -> STR_3(20), STR_2(37), STR_1(31), 
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   836 ;;      Params:         0       0       0       0       0
   837 ;;      Locals:         1       0       0       0       0
   838 ;;      Temps:          1       0       0       0       0
   839 ;;      Totals:         2       0       0       0       0
   840 ;;Total ram usage:        2 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; Hardware stack levels required when called:    1
   843 ;; This function calls:
   844 ;;		_USART_Tx
   845 ;; This function is called by:
   846 ;;		_main
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           
   851                           ;psect for function _USART_Cadena
   852  074B                     _USART_Cadena:
   853                           
   854                           ;incstack = 0
   855                           ; Regs used in _USART_Cadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   856                           ;USART_Cadena@str stored from wreg
   857  074B  00F2               	movwf	USART_Cadena@str
   858  074C                     l765:
   859                           
   860                           ;main.c: 121:         while(*str != '\0'){
   861  074C  2F5D               	goto	l771
   862  074D                     l767:
   863                           
   864                           ;main.c: 122:             USART_Tx(*str);
   865  074D  0872               	movf	USART_Cadena@str,w
   866  074E  0084               	movwf	4
   867  074F  120A  118A  2003  120A  118A  	fcall	stringdir
   868  0754  120A  118A  273F  120A  118A  	fcall	_USART_Tx
   869  0759                     l769:
   870                           
   871                           ;main.c: 123:             str++;
   872  0759  3001               	movlw	1
   873  075A  00F1               	movwf	??_USART_Cadena
   874  075B  0871               	movf	??_USART_Cadena,w
   875  075C  07F2               	addwf	USART_Cadena@str,f
   876  075D                     l771:
   877                           
   878                           ;main.c: 121:         while(*str != '\0'){
   879  075D  0872               	movf	USART_Cadena@str,w
   880  075E  0084               	movwf	4
   881  075F  120A  118A  2003  120A  118A  	fcall	stringdir
   882  0764  3A00               	xorlw	0
   883  0765  1D03               	skipz
   884  0766  2F68               	goto	u61
   885  0767  2F69               	goto	u60
   886  0768                     u61:
   887  0768  2F4D               	goto	l767
   888  0769                     u60:
   889  0769                     l70:
   890  0769  0008               	return
   891  076A                     __end_of_USART_Cadena:
   892                           
   893                           	psect	text3
   894  073F                     __ptext3:	
   895 ;; *************** function _USART_Tx *****************
   896 ;; Defined at:
   897 ;;		line 115 in file "main.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;  data            1    wreg     unsigned char 
   900 ;; Auto vars:     Size  Location     Type
   901 ;;  data            1    0[COMMON] unsigned char 
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   911 ;;      Params:         0       0       0       0       0
   912 ;;      Locals:         1       0       0       0       0
   913 ;;      Temps:          0       0       0       0       0
   914 ;;      Totals:         1       0       0       0       0
   915 ;;Total ram usage:        1 bytes
   916 ;; Hardware stack levels used:    1
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_USART_Cadena
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           
   925                           ;psect for function _USART_Tx
   926  073F                     _USART_Tx:
   927                           
   928                           ;incstack = 0
   929                           ; Regs used in _USART_Tx: [wreg]
   930                           ;USART_Tx@data stored from wreg
   931  073F  00F0               	movwf	USART_Tx@data
   932  0740                     l665:
   933  0740                     l61:	
   934                           ;main.c: 116:         while(TXSTAbits.TRMT == 0);
   935                           
   936  0740  1683               	bsf	3,5	;RP0=1, select bank1
   937  0741  1303               	bcf	3,6	;RP1=0, select bank1
   938  0742  1C98               	btfss	24,1	;volatile
   939  0743  2F45               	goto	u11
   940  0744  2F46               	goto	u10
   941  0745                     u11:
   942  0745  2F40               	goto	l61
   943  0746                     u10:
   944  0746                     l667:
   945                           
   946                           ;main.c: 117:         TXREG = data;
   947  0746  0870               	movf	USART_Tx@data,w
   948  0747  1283               	bcf	3,5	;RP0=0, select bank0
   949  0748  1303               	bcf	3,6	;RP1=0, select bank0
   950  0749  0099               	movwf	25	;volatile
   951  074A                     l64:
   952  074A  0008               	return
   953  074B                     __end_of_USART_Tx:
   954  007E                     btemp	set	126	;btemp
   955  007E                     wtemp0	set	126
   956                           
   957                           	psect	config
   958                           
   959                           ;Config register CONFIG1 @ 0x2007
   960                           ;	Oscillator Selection bits
   961                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   962                           ;	Watchdog Timer Enable bit
   963                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   964                           ;	Power-up Timer Enable bit
   965                           ;	PWRTE = OFF, PWRT disabled
   966                           ;	RE3/MCLR pin function select bit
   967                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   968                           ;	Code Protection bit
   969                           ;	CP = OFF, Program memory code protection is disabled
   970                           ;	Data Code Protection bit
   971                           ;	CPD = OFF, Data memory code protection is disabled
   972                           ;	Brown Out Reset Selection bits
   973                           ;	BOREN = OFF, BOR disabled
   974                           ;	Internal External Switchover bit
   975                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   976                           ;	Fail-Safe Clock Monitor Enabled bit
   977                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   978                           ;	Low Voltage Programming Enable bit
   979                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
   980                           ;	In-Circuit Debugger Mode bit
   981                           ;	DEBUG = 0x1, unprogrammed default
   982  2007                     	org	8199
   983  2007  30D4               	dw	12500
   984                           
   985                           ;Config register CONFIG2 @ 0x2008
   986                           ;	Brown-out Reset Selection bit
   987                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   988                           ;	Flash Program Memory Self Write Enable bits
   989                           ;	WRT = OFF, Write protection off
   990  2008                     	org	8200
   991  2008  3FFF               	dw	16383

Data Sizes:
    Strings     199
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    USART_Cadena@str	PTR unsigned char  size(1) Largest target is 38
		 -> STR_7(CODE[38]), STR_6(CODE[37]), STR_5(CODE[14]), STR_4(CODE[22]), 
		 -> STR_3(CODE[20]), STR_2(CODE[37]), STR_1(CODE[31]), 


Critical Paths under _main in COMMON

    _main->_USART_Cadena
    _USART_Cadena->_USART_Tx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     291
                                              3 COMMON     2     2      0
                       _USART_Cadena
                           _USART_Rx
 ---------------------------------------------------------------------------------
 (1) _USART_Rx                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Cadena                                         2     2      0     291
                                              1 COMMON     2     2      0
                           _USART_Tx
 ---------------------------------------------------------------------------------
 (2) _USART_Tx                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_Cadena
     _USART_Tx
   _USART_Rx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon May 10 01:06:59 2021

                      pc 0002                       l42 07A5                       l61 0740  
                     l53 07D6                       l70 0769                       l64 074A  
                     l73 073E                       l49 07C1                       u10 0746  
                     u11 0745                       u60 0769                       u61 0768  
                     u70 07AB                       u71 07AA                       u80 07C7  
                     u81 07C6                       u90 07DC                       u91 07DB  
                     fsr 0004                      l801 0799                      l811 07C7  
                    l803 079F                      l813 07D0                      l805 07AB  
                    l815 07DC                      l807 07B4                      l665 0740  
                    l809 07BB                      l667 0746                      l771 075D  
                    l819 07E5                      l765 074C                      l677 073B  
                    l781 077C                      l773 076A                      l767 074D  
                    l791 0788                      l783 077D                      l775 0776  
                    l769 0759                      l857 07ED                      l793 0789  
                    l785 0780                      l777 077A                      l795 078A  
                    l787 0784                      l779 077B                      l797 078D  
                    l789 0785                      l799 0793                      fsr0 0004  
                   STR_1 0079                     STR_2 002F                     STR_3 00AE  
                   STR_4 0098                     STR_5 00C2                     STR_6 0054  
                   STR_7 0009                     _main 076A                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
                  _RCREG 001A                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  _TXREG 0019                    _valor 0075         __end_of_USART_Rx 073F  
       __end_of_USART_Tx 074B             USART_Tx@data 0070                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FB  
           __end_of_main 07FB                   ??_main 0073                   _ANSELH 0189  
                 _SPBRGH 009A  __end_of__initialization 07FC           __pcstackCOMMON 0070  
              ?_USART_Rx 0070                ?_USART_Tx 0070               __pmaintext 076A  
             ??_USART_Rx 0070               ??_USART_Tx 0070               __stringtab 0003  
                __ptext1 073B                  __ptext2 074B                  __ptext3 073F  
   end_of_initialization 07FC                _RCSTAbits 0018            ?_USART_Cadena 0070  
              _TXSTAbits 0098              _BAUDCTLbits 0187        __size_of_USART_Rx 0004  
      __size_of_USART_Tx 000C      start_initialization 07FB           ??_USART_Cadena 0071  
            __pbssCOMMON 0075                ___latbits 0002                __pstrings 0003  
               _PIR1bits 000C          USART_Cadena@str 0072     __end_of_USART_Cadena 076A  
               _USART_Rx 073B                 _USART_Tx 073F              __stringbase 0008  
     __end_of__stringtab 0009            __size_of_main 0091                stringcode 0003  
  __size_of_USART_Cadena 001F               _OSCCONbits 008F                 stringdir 0003  
               stringtab 0003             _USART_Cadena 074B  
