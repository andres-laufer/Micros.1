

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 27 19:49:32 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  000B                     _INTCONbits	set	11
   204  0012                     _T2CONbits	set	18
   205  001D                     _CCP2CONbits	set	29
   206  0017                     _CCP1CONbits	set	23
   207  001F                     _ADCON0bits	set	31
   208  001B                     _CCPR2L	set	27
   209  001E                     _ADRESH	set	30
   210  0015                     _CCPR1L	set	21
   211  000C                     _PIR1bits	set	12
   212  008C                     _PIE1bits	set	140
   213  008F                     _OSCCONbits	set	143
   214  0092                     _PR2	set	146
   215  0088                     _TRISDbits	set	136
   216  0087                     _TRISCbits	set	135
   217  009F                     _ADCON1bits	set	159
   218  0088                     _TRISD	set	136
   219  0087                     _TRISC	set	135
   220  0085                     _TRISA	set	133
   221  0189                     _ANSELH	set	393
   222  0188                     _ANSEL	set	392
   223                           
   224                           	psect	cinit
   225  000F                     start_initialization:	
   226                           ; #config settings
   227                           
   228  000F                     __initialization:
   229                           
   230                           ; Clear objects allocated to COMMON
   231  000F  01F4               	clrf	__pbssCOMMON& (0+127)
   232  0010                     end_of_initialization:	
   233                           ;End of C runtime variable initialization code
   234                           
   235  0010                     __end_of__initialization:
   236  0010  0183               	clrf	3
   237  0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   238                           
   239                           	psect	bssCOMMON
   240  0074                     __pbssCOMMON:
   241  0074                     _toca:
   242  0074                     	ds	1
   243                           
   244                           	psect	cstackCOMMON
   245  0070                     __pcstackCOMMON:
   246  0070                     ?_isr:
   247  0070                     ??_isr:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ?_main:	
   251                           ; 1 bytes @ 0x0
   252                           
   253                           
   254                           ; 1 bytes @ 0x0
   255  0070                     	ds	3
   256  0073                     ??_main:
   257                           
   258                           ; 1 bytes @ 0x3
   259  0073                     	ds	1
   260                           
   261                           	psect	maintext
   262  0014                     __pmaintext:	
   263 ;;
   264 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   265 ;;
   266 ;; *************** function _main *****************
   267 ;; Defined at:
   268 ;;		line 65 in file "main.c"
   269 ;; Parameters:    Size  Location     Type
   270 ;;		None
   271 ;; Auto vars:     Size  Location     Type
   272 ;;		None
   273 ;; Return value:  Size  Location     Type
   274 ;;                  1    wreg      void 
   275 ;; Registers used:
   276 ;;		wreg, status,2, status,0
   277 ;; Tracked objects:
   278 ;;		On entry : B00/0
   279 ;;		On exit  : 0/0
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   282 ;;      Params:         0       0       0       0       0
   283 ;;      Locals:         0       0       0       0       0
   284 ;;      Temps:          1       0       0       0       0
   285 ;;      Totals:         1       0       0       0       0
   286 ;;Total ram usage:        1 bytes
   287 ;; Hardware stack levels required when called:    1
   288 ;; This function calls:
   289 ;;		Nothing
   290 ;; This function is called by:
   291 ;;		Startup code after reset
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295                           
   296                           ;psect for function _main
   297  0014                     _main:
   298  0014                     l672:	
   299                           ;incstack = 0
   300                           ; Regs used in _main: [wreg+status,2+status,0]
   301                           
   302                           
   303                           ;main.c: 67:     ANSEL = 0b00000011;
   304  0014  3003               	movlw	3
   305  0015  1683               	bsf	3,5	;RP0=1, select bank3
   306  0016  1703               	bsf	3,6	;RP1=1, select bank3
   307  0017  0088               	movwf	8	;volatile
   308  0018                     l674:
   309                           
   310                           ;main.c: 68:     ANSELH = 0x00;
   311  0018  0189               	clrf	9	;volatile
   312  0019                     l676:
   313                           
   314                           ;main.c: 70:     TRISA = 0b00000011;
   315  0019  3003               	movlw	3
   316  001A  1683               	bsf	3,5	;RP0=1, select bank1
   317  001B  1303               	bcf	3,6	;RP1=0, select bank1
   318  001C  0085               	movwf	5	;volatile
   319                           
   320                           ;main.c: 71:     TRISC = 0x00;
   321  001D  0187               	clrf	7	;volatile
   322                           
   323                           ;main.c: 72:     TRISD = 0x00;
   324  001E  0188               	clrf	8	;volatile
   325  001F                     l678:
   326                           
   327                           ;main.c: 75:     ADCON1bits.ADFM = 0;
   328  001F  139F               	bcf	31,7	;volatile
   329  0020                     l680:
   330                           
   331                           ;main.c: 76:     ADCON1bits.VCFG0 = 0;
   332  0020  121F               	bcf	31,4	;volatile
   333  0021                     l682:
   334                           
   335                           ;main.c: 77:     ADCON1bits.VCFG1 = 0;
   336  0021  129F               	bcf	31,5	;volatile
   337  0022                     l684:
   338                           
   339                           ;main.c: 78:     ADCON0bits.ADCS = 0b10;
   340  0022  1283               	bcf	3,5	;RP0=0, select bank0
   341  0023  1303               	bcf	3,6	;RP1=0, select bank0
   342  0024  081F               	movf	31,w	;volatile
   343  0025  393F               	andlw	-193
   344  0026  3880               	iorlw	128
   345  0027  009F               	movwf	31	;volatile
   346  0028                     l686:
   347                           
   348                           ;main.c: 79:     ADCON0bits.CHS = 0;
   349  0028  30C3               	movlw	-61
   350  0029  059F               	andwf	31,f	;volatile
   351  002A                     l688:
   352                           
   353                           ;main.c: 80:     _delay((unsigned long)((50)*(8000000/4000000.0)));
   354  002A  3021               	movlw	33
   355  002B  00F3               	movwf	??_main
   356  002C                     u87:
   357  002C  0BF3               	decfsz	??_main,f
   358  002D  282C               	goto	u87
   359  002E                     l690:
   360                           
   361                           ;main.c: 81:     ADCON0bits.ADON = 1;
   362  002E  1283               	bcf	3,5	;RP0=0, select bank0
   363  002F  1303               	bcf	3,6	;RP1=0, select bank0
   364  0030  141F               	bsf	31,0	;volatile
   365  0031                     l692:
   366                           
   367                           ;main.c: 84:     TRISCbits.TRISC2 = 1;
   368  0031  1683               	bsf	3,5	;RP0=1, select bank1
   369  0032  1303               	bcf	3,6	;RP1=0, select bank1
   370  0033  1507               	bsf	7,2	;volatile
   371  0034                     l694:
   372                           
   373                           ;main.c: 85:     TRISDbits.TRISD5 = 1;
   374  0034  1688               	bsf	8,5	;volatile
   375  0035                     l696:
   376                           
   377                           ;main.c: 87:     PR2 = 255;
   378  0035  30FF               	movlw	255
   379  0036  0092               	movwf	18	;volatile
   380  0037                     l698:
   381                           
   382                           ;main.c: 89:     CCP1CONbits.P1M = 0;
   383  0037  303F               	movlw	-193
   384  0038  1283               	bcf	3,5	;RP0=0, select bank0
   385  0039  1303               	bcf	3,6	;RP1=0, select bank0
   386  003A  0597               	andwf	23,f	;volatile
   387  003B                     l700:
   388                           
   389                           ;main.c: 90:     CCP1CONbits.CCP1M = 0b1100;
   390  003B  0817               	movf	23,w	;volatile
   391  003C  39F0               	andlw	-16
   392  003D  380C               	iorlw	12
   393  003E  0097               	movwf	23	;volatile
   394  003F                     l702:
   395                           
   396                           ;main.c: 91:     CCPR1L = 0x0f;
   397  003F  300F               	movlw	15
   398  0040  0095               	movwf	21	;volatile
   399  0041                     l704:
   400                           
   401                           ;main.c: 93:     CCP2CONbits.CCP2M = 0;
   402  0041  30F0               	movlw	-16
   403  0042  059D               	andwf	29,f	;volatile
   404  0043                     l706:
   405                           
   406                           ;main.c: 94:     CCP2CONbits.CCP2M = 0b1100;
   407  0043  081D               	movf	29,w	;volatile
   408  0044  39F0               	andlw	-16
   409  0045  380C               	iorlw	12
   410  0046  009D               	movwf	29	;volatile
   411  0047                     l708:
   412                           
   413                           ;main.c: 95:     CCPR1L = 0x0f;
   414  0047  300F               	movlw	15
   415  0048  0095               	movwf	21	;volatile
   416  0049                     l710:
   417                           
   418                           ;main.c: 96:     CCPR2L = 0x0f;
   419  0049  300F               	movlw	15
   420  004A  009B               	movwf	27	;volatile
   421  004B                     l712:
   422                           
   423                           ;main.c: 98:     CCP1CONbits.DC1B = 0;
   424  004B  30CF               	movlw	-49
   425  004C  0597               	andwf	23,f	;volatile
   426  004D                     l714:
   427                           
   428                           ;main.c: 99:     CCP2CONbits.DC2B0 = 0;
   429  004D  121D               	bcf	29,4	;volatile
   430  004E                     l716:
   431                           
   432                           ;main.c: 100:     CCP2CONbits.DC2B1 = 0;
   433  004E  129D               	bcf	29,5	;volatile
   434  004F                     l718:
   435                           
   436                           ;main.c: 102:     PIR1bits.TMR2IF = 0;
   437  004F  108C               	bcf	12,1	;volatile
   438  0050                     l720:
   439                           
   440                           ;main.c: 103:     T2CONbits.T2CKPS = 0b11;
   441  0050  3003               	movlw	3
   442  0051  0492               	iorwf	18,f	;volatile
   443  0052                     l722:
   444                           
   445                           ;main.c: 104:     T2CONbits.TMR2ON = 1;
   446  0052  1512               	bsf	18,2	;volatile
   447  0053                     l58:	
   448                           ;main.c: 105:     while(PIR1bits.TMR2IF == 0);
   449                           
   450  0053  1C8C               	btfss	12,1	;volatile
   451  0054  2856               	goto	u41
   452  0055  2857               	goto	u40
   453  0056                     u41:
   454  0056  2853               	goto	l58
   455  0057                     u40:
   456  0057                     l60:
   457                           
   458                           ;main.c: 106:     PIR1bits.TMR2IF = 0;
   459  0057  108C               	bcf	12,1	;volatile
   460                           
   461                           ;main.c: 107:     TRISCbits.TRISC2 = 0;
   462  0058  1683               	bsf	3,5	;RP0=1, select bank1
   463  0059  1303               	bcf	3,6	;RP1=0, select bank1
   464  005A  1107               	bcf	7,2	;volatile
   465                           
   466                           ;main.c: 108:     TRISDbits.TRISD5 = 0;
   467  005B  1288               	bcf	8,5	;volatile
   468  005C                     l724:
   469                           
   470                           ;main.c: 110:     OSCCONbits.IRCF = 0b0111 ;
   471  005C  3070               	movlw	112
   472  005D  048F               	iorwf	15,f	;volatile
   473  005E                     l726:
   474                           
   475                           ;main.c: 111:     OSCCONbits.SCS = 1;
   476  005E  140F               	bsf	15,0	;volatile
   477  005F                     l728:
   478                           
   479                           ;main.c: 115:     PIR1bits.ADIF = 0;
   480  005F  1283               	bcf	3,5	;RP0=0, select bank0
   481  0060  1303               	bcf	3,6	;RP1=0, select bank0
   482  0061  130C               	bcf	12,6	;volatile
   483  0062                     l730:
   484                           
   485                           ;main.c: 116:     PIE1bits.ADIE = 1;
   486  0062  1683               	bsf	3,5	;RP0=1, select bank1
   487  0063  1303               	bcf	3,6	;RP1=0, select bank1
   488  0064  170C               	bsf	12,6	;volatile
   489  0065                     l732:
   490                           
   491                           ;main.c: 117:     INTCONbits.PEIE = 1;
   492  0065  170B               	bsf	11,6	;volatile
   493  0066                     l734:
   494                           
   495                           ;main.c: 118:     INTCONbits.GIE = 1;
   496  0066  178B               	bsf	11,7	;volatile
   497  0067                     l736:
   498                           
   499                           ;main.c: 119:     ADCON0bits.GO = 1;
   500  0067  1283               	bcf	3,5	;RP0=0, select bank0
   501  0068  1303               	bcf	3,6	;RP1=0, select bank0
   502  0069  149F               	bsf	31,1	;volatile
   503  006A                     l738:
   504                           
   505                           ;main.c: 121:     toca = 1;
   506  006A  01F4               	clrf	_toca
   507  006B  0AF4               	incf	_toca,f
   508  006C                     l740:
   509                           
   510                           ;main.c: 126:         if(ADCON0bits.GO == 0){
   511  006C  189F               	btfsc	31,1	;volatile
   512  006D  286F               	goto	u51
   513  006E  2870               	goto	u50
   514  006F                     u51:
   515  006F  286C               	goto	l740
   516  0070                     u50:
   517  0070                     l742:
   518                           
   519                           ;main.c: 128:             if(ADCON0bits.CHS == 0){
   520  0070  0C1F               	rrf	31,w	;volatile
   521  0071  00F3               	movwf	??_main
   522  0072  0C73               	rrf	??_main,w
   523  0073  390F               	andlw	15
   524  0074  3A00               	xorlw	0
   525  0075  1D03               	skipz
   526  0076  2878               	goto	u61
   527  0077  2879               	goto	u60
   528  0078                     u61:
   529  0078  287F               	goto	l748
   530  0079                     u60:
   531  0079                     l744:
   532                           
   533                           ;main.c: 129:                 toca = 0;
   534  0079  01F4               	clrf	_toca
   535  007A                     l746:
   536                           
   537                           ;main.c: 130:                 ADCON0bits.CHS = 1;
   538  007A  081F               	movf	31,w	;volatile
   539  007B  39C3               	andlw	-61
   540  007C  3804               	iorlw	4
   541  007D  009F               	movwf	31	;volatile
   542                           
   543                           ;main.c: 131:             }
   544  007E  288C               	goto	l754
   545  007F                     l748:
   546  007F  0C1F               	rrf	31,w	;volatile
   547  0080  00F3               	movwf	??_main
   548  0081  0C73               	rrf	??_main,w
   549  0082  390F               	andlw	15
   550  0083  3A01               	xorlw	1
   551  0084  1D03               	skipz
   552  0085  2887               	goto	u71
   553  0086  2888               	goto	u70
   554  0087                     u71:
   555  0087  288C               	goto	l754
   556  0088                     u70:
   557  0088                     l750:
   558                           
   559                           ;main.c: 133:                 toca = 1;
   560  0088  01F4               	clrf	_toca
   561  0089  0AF4               	incf	_toca,f
   562  008A                     l752:
   563                           
   564                           ;main.c: 134:                 ADCON0bits.CHS = 0;
   565  008A  30C3               	movlw	-61
   566  008B  059F               	andwf	31,f	;volatile
   567  008C                     l754:
   568                           
   569                           ;main.c: 136:             _delay((unsigned long)((50)*(8000000/4000000.0)));
   570  008C  3021               	movlw	33
   571  008D  00F3               	movwf	??_main
   572  008E                     u97:
   573  008E  0BF3               	decfsz	??_main,f
   574  008F  288E               	goto	u97
   575  0090                     l756:
   576                           
   577                           ;main.c: 138:             ADCON0bits.GO = 1;
   578  0090  1283               	bcf	3,5	;RP0=0, select bank0
   579  0091  1303               	bcf	3,6	;RP1=0, select bank0
   580  0092  149F               	bsf	31,1	;volatile
   581  0093  286C               	goto	l740
   582  0094  120A  118A  280C   	ljmp	start
   583  0097                     __end_of_main:
   584                           
   585                           	psect	text1
   586  0097                     __ptext1:	
   587 ;; *************** function _isr *****************
   588 ;; Defined at:
   589 ;;		line 47 in file "main.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg, status,2, status,0
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   603 ;;      Params:         0       0       0       0       0
   604 ;;      Locals:         0       0       0       0       0
   605 ;;      Temps:          3       0       0       0       0
   606 ;;      Totals:         3       0       0       0       0
   607 ;;Total ram usage:        3 bytes
   608 ;; Hardware stack levels used:    1
   609 ;; This function calls:
   610 ;;		Nothing
   611 ;; This function is called by:
   612 ;;		Interrupt level 1
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           
   617                           ;psect for function _isr
   618  0097                     _isr:
   619  0097                     i1l660:
   620                           
   621                           ;main.c: 49:     if(PIR1bits.ADIF == 1){
   622  0097  1283               	bcf	3,5	;RP0=0, select bank0
   623  0098  1303               	bcf	3,6	;RP1=0, select bank0
   624  0099  1F0C               	btfss	12,6	;volatile
   625  009A  289C               	goto	u1_21
   626  009B  289D               	goto	u1_20
   627  009C                     u1_21:
   628  009C  28B5               	goto	i1l53
   629  009D                     u1_20:
   630  009D                     i1l662:
   631                           
   632                           ;main.c: 51:         if(toca == 1){
   633  009D  0374               	decf	_toca,w
   634  009E  1D03               	btfss	3,2
   635  009F  28A1               	goto	u2_21
   636  00A0  28A2               	goto	u2_20
   637  00A1                     u2_21:
   638  00A1  28A9               	goto	i1l666
   639  00A2                     u2_20:
   640  00A2                     i1l664:
   641                           
   642                           ;main.c: 52:             CCPR1L = (ADRESH >> 1) + 124;
   643  00A2  081E               	movf	30,w	;volatile
   644  00A3  00F0               	movwf	??_isr
   645  00A4  1003               	clrc
   646  00A5  0C70               	rrf	??_isr,w
   647  00A6  3E7C               	addlw	124
   648  00A7  0095               	movwf	21	;volatile
   649                           
   650                           ;main.c: 53:         }
   651  00A8  28B4               	goto	i1l670
   652  00A9                     i1l666:
   653  00A9  0874               	movf	_toca,w
   654  00AA  1D03               	btfss	3,2
   655  00AB  28AD               	goto	u3_21
   656  00AC  28AE               	goto	u3_20
   657  00AD                     u3_21:
   658  00AD  28B4               	goto	i1l670
   659  00AE                     u3_20:
   660  00AE                     i1l668:
   661                           
   662                           ;main.c: 55:             CCPR2L = (ADRESH >> 1) + 124;
   663  00AE  081E               	movf	30,w	;volatile
   664  00AF  00F0               	movwf	??_isr
   665  00B0  1003               	clrc
   666  00B1  0C70               	rrf	??_isr,w
   667  00B2  3E7C               	addlw	124
   668  00B3  009B               	movwf	27	;volatile
   669  00B4                     i1l670:
   670                           
   671                           ;main.c: 58:         PIR1bits.ADIF = 0;
   672  00B4  130C               	bcf	12,6	;volatile
   673  00B5                     i1l53:
   674  00B5  0872               	movf	??_isr+2,w
   675  00B6  008A               	movwf	10
   676  00B7  0E71               	swapf	??_isr+1,w
   677  00B8  0083               	movwf	3
   678  00B9  0EFE               	swapf	btemp,f
   679  00BA  0E7E               	swapf	btemp,w
   680  00BB  0009               	retfie
   681  00BC                     __end_of_isr:
   682  007E                     btemp	set	126	;btemp
   683  007E                     wtemp0	set	126
   684                           
   685                           	psect	intentry
   686  0004                     __pintentry:	
   687                           ;incstack = 0
   688                           ; Regs used in _isr: [wreg+status,2+status,0]
   689                           
   690  0004                     interrupt_function:
   691  007E                     saved_w	set	btemp
   692  0004  00FE               	movwf	btemp
   693  0005  0E03               	swapf	3,w
   694  0006  00F1               	movwf	??_isr+1
   695  0007  080A               	movf	10,w
   696  0008  00F2               	movwf	??_isr+2
   697  0009  120A  118A  2897   	ljmp	_isr
   698                           
   699                           	psect	config
   700                           
   701                           ;Config register CONFIG1 @ 0x2007
   702                           ;	Oscillator Selection bits
   703                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   704                           ;	Watchdog Timer Enable bit
   705                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   706                           ;	Power-up Timer Enable bit
   707                           ;	PWRTE = OFF, PWRT disabled
   708                           ;	RE3/MCLR pin function select bit
   709                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   710                           ;	Code Protection bit
   711                           ;	CP = OFF, Program memory code protection is disabled
   712                           ;	Data Code Protection bit
   713                           ;	CPD = OFF, Data memory code protection is disabled
   714                           ;	Brown Out Reset Selection bits
   715                           ;	BOREN = OFF, BOR disabled
   716                           ;	Internal External Switchover bit
   717                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   718                           ;	Fail-Safe Clock Monitor Enabled bit
   719                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   720                           ;	Low Voltage Programming Enable bit
   721                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
   722                           ;	In-Circuit Debugger Mode bit
   723                           ;	DEBUG = 0x1, unprogrammed default
   724  2007                     	org	8199
   725  2007  30D4               	dw	12500
   726                           
   727                           ;Config register CONFIG2 @ 0x2008
   728                           ;	Brown-out Reset Selection bit
   729                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   730                           ;	Flash Program Memory Self Write Enable bits
   731                           ;	WRT = OFF, Write protection off
   732  2008                     	org	8200
   733  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       5      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 27 19:49:32 2021

                     l60 0057                       l58 0053                       u40 0057  
                     u41 0056                       u50 0070                       u51 006F  
                     u60 0079                       u61 0078                       u70 0088  
                     u71 0087                       u87 002C                       u97 008E  
                    l700 003B                      l710 0049                      l702 003F  
                    l720 0050                      l712 004B                      l704 0041  
                    l730 0062                      l722 0052                      l714 004D  
                    l706 0043                      l740 006C                      l732 0065  
                    l724 005C                      l716 004E                      l708 0047  
                    l750 0088                      l742 0070                      l734 0066  
                    l726 005E                      l718 004F                      l752 008A  
                    l744 0079                      l736 0067                      l728 005F  
                    l680 0020                      l672 0014                      l754 008C  
                    l746 007A                      l738 006A                      l690 002E  
                    l682 0021                      l674 0018                      l756 0090  
                    l748 007F                      l692 0031                      l684 0022  
                    l676 0019                      l694 0034                      l686 0028  
                    l678 001F                      l696 0035                      l688 002A  
                    l698 0037                      _PR2 0092                      _isr 0097  
                   ?_isr 0070                     i1l53 00B5                     u1_20 009D  
                   u1_21 009C                     u2_20 00A2                     u2_21 00A1  
                   u3_20 00AE                     u3_21 00AD                     _main 0014  
                   _toca 0074                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l660 0097                    i1l670 00B4                    i1l662 009D  
                  i1l664 00A2                    i1l666 00A9                    i1l668 00AE  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0097                   ??_main 0073  
                 _ADRESH 001E                   _CCPR1L 0015                   _CCPR2L 001B  
                 _ANSELH 0189                   saved_w 007E  __end_of__initialization 0010  
         __pcstackCOMMON 0070               __pmaintext 0014               __pintentry 0004  
                __ptext1 0097                _T2CONbits 0012             __size_of_isr 0025  
   end_of_initialization 0010                _TRISCbits 0087                _TRISDbits 0088  
            _CCP1CONbits 0017              _CCP2CONbits 001D      start_initialization 000F  
            __end_of_isr 00BC              __pbssCOMMON 0074                ___latbits 0002  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F            __size_of_main 0083  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
